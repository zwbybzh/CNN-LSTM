  torch.cpp
D:\libtorch\libtorch\include\c10\util\Exception.h(30,35): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“c10::Error”的基
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h(49,24):
      参见“std::exception”的声明
      D:\libtorch\libtorch\include\c10\util\Exception.h(30,15):
      参见“c10::Error”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(33,15): warning C4251: “c10::Error::msg_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::Error”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(38,28): warning C4251: “c10::Error::context_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“c10::Error”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(43,13): warning C4251: “c10::Error::backtrace_”:“std::shared_ptr<const c10::LazyValue<std::string>>”需要有 dll 接口以供“c10::Error”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<const c10::LazyValue<std::string>>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(50,39): warning C4251: “c10::Error::what_”:“c10::OptimisticLazy<std::string>”需要有 dll 接口以供“c10::Error”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\Lazy.h(17,7):
      参见“c10::OptimisticLazy<std::string>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(51,15): warning C4251: “c10::Error::what_without_backtrace_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::Error”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(150,21): warning C4251: “c10::Warning::type_”:“std::variant<c10::Warning::UserWarning,c10::Warning::DeprecationWarning>”需要有 dll 接口以供“c10::Warning”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<c10::Warning::UserWarning,c10::Warning::DeprecationWarning>”的声明
  
D:\libtorch\libtorch\include\c10\util\Exception.h(156,15): warning C4251: “c10::Warning::msg_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::Warning”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(446,15): warning C4267: “return”: 从“size_t”转换到“uint8_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(213,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(216,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(219,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(222,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(226,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(229,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(232,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(235,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(241,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(244,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(247,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(250,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(254,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(257,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(260,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\BFloat16-inl.h(263,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(162,41): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(165,41): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(168,41): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(171,41): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(175,37): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(178,37): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(181,37): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(184,37): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(190,41): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(193,41): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(196,41): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(199,41): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(203,37): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(206,37): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(209,37): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fn-inl.h(212,37): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(163,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(166,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(169,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(172,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(176,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(179,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(182,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(185,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(191,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(194,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(197,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(200,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(204,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(207,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(210,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e4m3fnuz-inl.h(213,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(231,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(234,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(237,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(240,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(244,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(247,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(250,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(253,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(259,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(262,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(265,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(268,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(272,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(275,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(278,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Half-inl.h(281,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(170,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(173,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(176,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(179,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(183,35): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(186,35): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(189,35): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(192,35): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(198,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(201,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(204,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(207,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(211,35): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(214,35): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(217,35): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2-inl.h(220,35): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(167,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(170,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(173,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(176,43): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(180,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(183,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(186,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(189,39): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(195,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(198,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(201,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(204,43): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(208,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(211,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(214,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\Float8_e5m2fnuz-inl.h(217,39): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(83,33): warning C4251: “c10::intrusive_ptr_target::refcount_”:“std::atomic<unsigned int>”需要有 dll 接口以供“c10::intrusive_ptr_target”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<unsigned int>”的声明
  
D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(84,33): warning C4251: “c10::intrusive_ptr_target::weakcount_”:“std::atomic<unsigned int>”需要有 dll 接口以供“c10::intrusive_ptr_target”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<unsigned int>”的声明
  
D:\libtorch\libtorch\include\c10\core\SymBool.h(90,11): warning C4251: “c10::SymBool::ptr_”:“c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::SymBool”的客户端使用
D:\libtorch\libtorch\include\c10\core\SymBool.h(90,11): warning C4251:         with
D:\libtorch\libtorch\include\c10\core\SymBool.h(90,11): warning C4251:         [
D:\libtorch\libtorch\include\c10\core\SymBool.h(90,11): warning C4251:             TTarget=c10::SymNodeImpl
D:\libtorch\libtorch\include\c10\core\SymBool.h(90,11): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::SymNodeImpl
          ]
  
D:\libtorch\libtorch\include\c10\core\SymFloat.h(114,11): warning C4251: “c10::SymFloat::ptr_”:“c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::SymFloat”的客户端使用
D:\libtorch\libtorch\include\c10\core\SymFloat.h(114,11): warning C4251:         with
D:\libtorch\libtorch\include\c10\core\SymFloat.h(114,11): warning C4251:         [
D:\libtorch\libtorch\include\c10\core\SymFloat.h(114,11): warning C4251:             TTarget=c10::SymNodeImpl
D:\libtorch\libtorch\include\c10\core\SymFloat.h(114,11): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::SymNodeImpl
          ]
  
D:\libtorch\libtorch\include\c10\core\Scalar.h(418,5): warning C4251: “c10::Scalar::v”:“c10::Scalar::v_t”需要有 dll 接口以供“c10::Scalar”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\Scalar.h(409,9):
      参见“c10::Scalar::v_t”的声明
  
D:\libtorch\libtorch\include\c10\util\typeid.h(60,18): warning C4251: “c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_”:“c10::util::type_index”需要有 dll 接口以供“c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeIndex.h(18,8):
      参见“c10::util::type_index”的声明
  
D:\libtorch\libtorch\include\c10\util\ThreadLocalDebugInfo.h(54,34): warning C4251: “c10::ThreadLocalDebugInfo::info_”:“std::shared_ptr<c10::DebugInfoBase>”需要有 dll 接口以供“c10::ThreadLocalDebugInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::DebugInfoBase>”的声明
  
D:\libtorch\libtorch\include\c10\util\ThreadLocalDebugInfo.h(56,41): warning C4251: “c10::ThreadLocalDebugInfo::parent_info_”:“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口以供“c10::ThreadLocalDebugInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
  
D:\libtorch\libtorch\include\c10\util\ThreadLocalDebugInfo.h(82,41): warning C4251: “c10::DebugInfoGuard::prev_info_”:“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口以供“c10::DebugInfoGuard”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
  
D:\libtorch\libtorch\include\c10\core\Allocator.h(30,30): warning C4251: “c10::DataPtr::ptr_”:“c10::detail::UniqueVoidPtr”需要有 dll 接口以供“c10::DataPtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\UniqueVoidPtr.h(41,7):
      参见“c10::detail::UniqueVoidPtr”的声明
  
D:\libtorch\libtorch\include\c10\core\Allocator.h(234,30): warning C4251: “c10::InefficientStdFunctionContext::deleter_”:“std::function<void (void *)>”需要有 dll 接口以供“c10::InefficientStdFunctionContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<void (void *)>”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\COWDeleter.h(53,21): warning C4251: “c10::impl::cow::COWDeleterContext::mutex_”:“std::shared_mutex”需要有 dll 接口以供“c10::impl::cow::COWDeleterContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\shared_mutex(27,19):
      参见“std::shared_mutex”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\COWDeleter.h(54,39): warning C4251: “c10::impl::cow::COWDeleterContext::data_”:“std::unique_ptr<void,c10::DeleterFnPtr>”需要有 dll 接口以供“c10::impl::cow::COWDeleterContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<void,c10::DeleterFnPtr>”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\COWDeleter.h(55,29): warning C4251: “c10::impl::cow::COWDeleterContext::refcount_”:“std::atomic<__int64>”需要有 dll 接口以供“c10::impl::cow::COWDeleterContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<__int64>”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\HermeticPyObjectTLS.h(58,28): warning C4251: “c10::impl::HermeticPyObjectTLS::haveState_”:“std::atomic<bool>”需要有 dll 接口以供“c10::impl::HermeticPyObjectTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<bool>”的声明
  
D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(79,26): warning C4244: “初始化”: 从“const T”转换到“long”，可能丢失数据
D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(79,26): warning C4244:         with
D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(79,26): warning C4244:         [
D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(79,26): warning C4244:             T=int64_t
D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(79,26): warning C4244:         ]
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\core\impl\PyObjectSlot.h(167,31): warning C4251: “c10::impl::PyObjectSlot::pyobj_interpreter_”:“std::atomic<c10::impl::PyInterpreter *>”需要有 dll 接口以供“c10::impl::PyObjectSlot”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<c10::impl::PyInterpreter *>”的声明
  
D:\libtorch\libtorch\include\c10\core\StorageImpl.h(26,30): warning C4251: “c10::StorageExtraMeta::custom_data_ptr_error_msg_”:“std::optional<std::string>”需要有 dll 接口以供“c10::StorageExtraMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\c10\core\StorageImpl.h(350,37): warning C4251: “c10::StorageImpl::extra_meta_”:“std::unique_ptr<c10::StorageExtraMeta,std::default_delete<c10::StorageExtraMeta>>”需要有 dll 接口以供“c10::StorageImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::StorageExtraMeta,std::default_delete<c10::StorageExtraMeta>>”的声明
  
D:\libtorch\libtorch\include\c10\core\Storage.h(206,35): warning C4251: “c10::Storage::storage_impl_”:“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::Storage”的客户端使用
D:\libtorch\libtorch\include\c10\core\Storage.h(206,35): warning C4251:         with
D:\libtorch\libtorch\include\c10\core\Storage.h(206,35): warning C4251:         [
D:\libtorch\libtorch\include\c10\core\Storage.h(206,35): warning C4251:             TTarget=c10::StorageImpl
D:\libtorch\libtorch\include\c10\core\Storage.h(206,35): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::StorageImpl
          ]
  
D:\libtorch\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(59,18): warning C4251: “c10::impl::LocalDispatchKeySet::included_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::impl::LocalDispatchKeySet”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(60,18): warning C4251: “c10::impl::LocalDispatchKeySet::excluded_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::impl::LocalDispatchKeySet”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(97,18): warning C4251: “c10::impl::IncludeDispatchKeyGuard::include_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::impl::IncludeDispatchKeyGuard”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(115,18): warning C4251: “c10::impl::ExcludeDispatchKeyGuard::exclude_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::impl::ExcludeDispatchKeyGuard”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\c10\core\SymbolicShapeMeta.h(18,16): warning C4251: “c10::SymbolicShapeMeta::sizes_”:“c10::SmallVector<c10::SymInt,5>”需要有 dll 接口以供“c10::SymbolicShapeMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<c10::SymInt,5>”的声明
  
D:\libtorch\libtorch\include\c10\core\SymbolicShapeMeta.h(19,16): warning C4251: “c10::SymbolicShapeMeta::strides_”:“c10::SmallVector<c10::SymInt,5>”需要有 dll 接口以供“c10::SymbolicShapeMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<c10::SymInt,5>”的声明
  
D:\libtorch\libtorch\include\c10\core\SymbolicShapeMeta.h(196,28): warning C4251: “c10::SymbolicShapeMeta::available_”:“std::atomic<int>”需要有 dll 接口以供“c10::SymbolicShapeMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<int>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(239,43): warning C4251: “c10::ExtraMeta::symbolic_shape_meta_”:“std::unique_ptr<c10::SymbolicShapeMeta,std::default_delete<c10::SymbolicShapeMeta>>”需要有 dll 接口以供“c10::ExtraMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::SymbolicShapeMeta,std::default_delete<c10::SymbolicShapeMeta>>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(240,50): warning C4251: “c10::ExtraMeta::named_tensor_meta_”:“std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>”需要有 dll 接口以供“c10::ExtraMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(241,35): warning C4251: “c10::ExtraMeta::backend_meta_”:“c10::intrusive_ptr<c10::BackendMeta,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::ExtraMeta”的客户端使用
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(241,35): warning C4251:         with
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(241,35): warning C4251:         [
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(241,35): warning C4251:             TTarget=c10::BackendMeta
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(241,35): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::BackendMeta,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::BackendMeta
          ]
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(242,30): warning C4251: “c10::ExtraMeta::custom_data_ptr_error_msg_”:“std::optional<std::string>”需要有 dll 接口以供“c10::ExtraMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(243,30): warning C4251: “c10::ExtraMeta::custom_storage_error_msg_”:“std::optional<std::string>”需要有 dll 接口以供“c10::ExtraMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(333,38): warning C4251: “c10::VariableVersion::version_counter_”:“c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::VariableVersion”的客户端使用
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(333,38): warning C4251:         with
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(333,38): warning C4251:         [
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(333,38): warning C4251:             TTarget=c10::VariableVersion::VersionCounter
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(333,38): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(407,34): warning C4244: “参数”: 从“int64_t”转换到“const _Ty”，可能丢失数据
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(407,34): warning C4244:         with
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(407,34): warning C4244:         [
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(407,34): warning C4244:             _Ty=unsigned int
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(407,34): warning C4244:         ]
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(2861,47): warning C4251: “c10::TensorImpl::autograd_meta_”:“std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>”需要有 dll 接口以供“c10::TensorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(2864,35): warning C4251: “c10::TensorImpl::extra_meta_”:“std::unique_ptr<c10::ExtraMeta,std::default_delete<c10::ExtraMeta>>”需要有 dll 接口以供“c10::TensorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::ExtraMeta,std::default_delete<c10::ExtraMeta>>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(2895,30): warning C4251: “c10::TensorImpl::device_opt_”:“std::optional<c10::Device>”需要有 dll 接口以供“c10::TensorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\c10\core\TensorImpl.h(3018,18): warning C4251: “c10::TensorImpl::key_set_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::TensorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\ATen\core\DeprecatedTypePropertiesRegistry.h(26,45): warning C4251: “at::DeprecatedTypePropertiesRegistry::registry”:“std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>”需要有 dll 接口以供“at::DeprecatedTypePropertiesRegistry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>”的声明
  
D:\libtorch\libtorch\include\c10\core\GeneratorImpl.h(99,18): warning C4251: “c10::GeneratorImpl::key_set_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::GeneratorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\ATen\core\Generator.h(140,42): warning C4251: “at::Generator::impl_”:“c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“at::Generator”的客户端使用
D:\libtorch\libtorch\include\ATen\core\Generator.h(140,42): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\Generator.h(140,42): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\Generator.h(140,42): warning C4251:             TTarget=c10::GeneratorImpl
D:\libtorch\libtorch\include\ATen\core\Generator.h(140,42): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::GeneratorImpl
          ]
  
D:\libtorch\libtorch\include\ATen\core\NamedTensor.h(68,24): warning C4251: “at::NamedTensorMeta::names_”:“std::vector<at::Dimname,std::allocator<at::Dimname>>”需要有 dll 接口以供“at::NamedTensorMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Dimname,std::allocator<at::Dimname>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\TensorBase.h(918,55): warning C4251: “at::TensorBase::impl_”:“c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>”需要有 dll 接口以供“at::TensorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(122,52): warning C4251: “torch::autograd::ForwardADLevel::grads_”:“std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>”需要有 dll 接口以供“torch::autograd::ForwardADLevel”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_set(59,7):
      参见“std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(127,37): warning C4251: “std::enable_shared_from_this<torch::autograd::ForwardGrad>::_Wptr”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“std::enable_shared_from_this<torch::autograd::ForwardGrad>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(127,37): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(127,37): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(127,37): warning C4251:             _Ty=torch::autograd::ForwardGrad
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(127,37): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::ForwardGrad
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(206,44): warning C4251: “torch::autograd::ForwardGrad::content_”:“std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>”需要有 dll 接口以供“torch::autograd::ForwardGrad”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(660,56): warning C4251: “std::enable_shared_from_this<c10::SharedType>::_Wptr”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“std::enable_shared_from_this<c10::SharedType>”的客户端使用
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(660,56): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(660,56): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(660,56): warning C4251:             _Ty=c10::SharedType
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(660,56): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=c10::SharedType
          ]
  
D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(709,32): warning C4251: “c10::NamedType::name_”:“std::optional<c10::QualifiedName>”需要有 dll 接口以供“c10::NamedType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::QualifiedName>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1381,11): warning C4251: “c10::IValue::payload”:“c10::IValue::Payload”需要有 dll 接口以供“c10::IValue”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\ivalue.h(1336,9):
      参见“c10::IValue::Payload”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1503,11): warning C4251: “c10::WeakIValue::payload”:“c10::IValue::Payload::TriviallyCopyablePayload”需要有 dll 接口以供“c10::WeakIValue”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\ivalue.h(1343,11):
      参见“c10::IValue::Payload::TriviallyCopyablePayload”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1514,48): warning C4251: “c10::StrongTypePtr::cu_”:“std::shared_ptr<torch::jit::CompilationUnit>”需要有 dll 接口以供“c10::StrongTypePtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::CompilationUnit>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1515,11): warning C4251: “c10::StrongTypePtr::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::StrongTypePtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1526,46): warning C4251: “c10::WeakTypePtr::cu_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“c10::WeakTypePtr”的客户端使用
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1526,46): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1526,46): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1526,46): warning C4251:             _Ty=torch::jit::CompilationUnit
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1526,46): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::CompilationUnit
          ]
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1527,11): warning C4251: “c10::WeakTypePtr::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::WeakTypePtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1575,31): warning C4251: “c10::WeakOrStrongTypePtr::cu_”:“c10::WeakOrStrongCompilationUnit”需要有 dll 接口以供“c10::WeakOrStrongTypePtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\ivalue.h(1531,8):
      参见“c10::WeakOrStrongCompilationUnit”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue.h(1576,11): warning C4251: “c10::WeakOrStrongTypePtr::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::WeakOrStrongTypePtr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(180,26): warning C4251: “c10::UnionType::types_”:“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”需要有 dll 接口以供“c10::UnionType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(240,11): warning C4251: “c10::OptionalType::contained_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::OptionalType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(291,25): warning C4251: “c10::Stride::stride_index_”:“std::optional<size_t>”需要有 dll 接口以供“c10::Stride”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<size_t>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(292,23): warning C4251: “c10::Stride::contiguous_”:“std::optional<bool>”需要有 dll 接口以供“c10::Stride”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(293,25): warning C4251: “c10::Stride::stride_”:“std::optional<size_t>”需要有 dll 接口以供“c10::Stride”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<size_t>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(359,30): warning C4251: “c10::ShapeSymbol::num_symbols”:“std::atomic<unsigned __int64>”需要有 dll 接口以供“c10::ShapeSymbol”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<unsigned __int64>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(485,45): warning C4251: “c10::SymbolicShape::dims_”:“std::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>”需要有 dll 接口以供“c10::SymbolicShape”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(846,33): warning C4251: “c10::TensorType::scalar_type_”:“std::optional<c10::ScalarType>”需要有 dll 接口以供“c10::TensorType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::ScalarType>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(847,29): warning C4251: “c10::TensorType::device_”:“std::optional<c10::Device>”需要有 dll 接口以供“c10::TensorType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(849,24): warning C4251: “c10::TensorType::strides_”:“c10::VaryingShape<c10::Stride>”需要有 dll 接口以供“c10::TensorType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type.h(500,8):
      参见“c10::VaryingShape<c10::Stride>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(850,23): warning C4251: “c10::TensorType::requires_grad_”:“std::optional<bool>”需要有 dll 接口以供“c10::TensorType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(862,23): warning C4251: “c10::TensorType::undefined_”:“std::optional<bool>”需要有 dll 接口以供“c10::TensorType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(870,14): warning C4251: “c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1010,24): warning C4251: “c10::DictType::types”:“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”需要有 dll 接口以供“c10::DictType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1018,14): warning C4251: “c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1060,14): warning C4251: “c10::SingleElementType<c10::TypeKind::AwaitType,c10::AwaitType>::elem”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::SingleElementType<c10::TypeKind::AwaitType,c10::AwaitType>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1102,14): warning C4251: “c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1232,24): warning C4251: “c10::TupleType::elements_”:“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”需要有 dll 接口以供“c10::TupleType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(1234,35): warning C4251: “c10::TupleType::schema_”:“std::shared_ptr<c10::FunctionSchema>”需要有 dll 接口以供“c10::TupleType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::FunctionSchema>”的声明
  
D:\libtorch\libtorch\include\ATen\core\jit_type.h(2221,48): warning C4251: “c10::InterfaceType::methods_”:“std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>”需要有 dll 接口以供“c10::InterfaceType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>”的声明
  
D:\libtorch\libtorch\include\c10\util\logging_is_not_google_glog.h(43,21): warning C4251: “c10::MessageLogger::stream_”:“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::MessageLogger”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\sstream(850,7):
      参见“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(300,21): warning C4251: “c10::ivalue::ConstantString::str_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::ivalue::ConstantString”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(669,24): warning C4251: “c10::ivalue::Tuple::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::ivalue::Tuple”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(880,52): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 struct“c10::ivalue::Future::FutureError”的基
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h(49,24):
      参见“std::exception”的声明
      D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(880,20):
      参见“c10::ivalue::Future::FutureError”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(890,17): warning C4251: “c10::ivalue::Future::FutureError::error_msg”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::ivalue::Future::FutureError”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1376,20): warning C4251: “c10::ivalue::Future::completed_”:“std::atomic<bool>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\atomic(2112,8):
      参见“std::atomic<bool>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1377,27): warning C4251: “c10::ivalue::Future::finished_cv_”:“std::condition_variable”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\mutex(532,19):
      参见“std::condition_variable”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1380,11): warning C4251: “c10::ivalue::Future::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1381,31): warning C4251: “c10::ivalue::Future::callbacks_”:“std::vector<c10::ivalue::Future::FutureCallback,std::allocator<c10::ivalue::Future::FutureCallback>>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::ivalue::Future::FutureCallback,std::allocator<c10::ivalue::Future::FutureCallback>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1382,22): warning C4251: “c10::ivalue::Future::eptr_”:“std::exception_ptr”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\exception(225,19):
      参见“std::exception_ptr”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1387,37): warning C4251: “c10::ivalue::Future::impl_”:“c10::impl::VirtualGuardImpl”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\impl\VirtualGuardImpl.h(11,7):
      参见“c10::impl::VirtualGuardImpl”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1392,30): warning C4251: “c10::ivalue::Future::currentDevice_”:“std::optional<c10::Device>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1398,27): warning C4251: “c10::ivalue::Future::events_”:“std::vector<c10::Event,std::allocator<c10::Event>>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Event,std::allocator<c10::Event>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1402,28): warning C4251: “c10::ivalue::Future::storages_”:“std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1411,34): warning C4251: “c10::ivalue::Future::devices_”:“std::vector<c10::Device,std::allocator<c10::Device>>”需要有 dll 接口以供“c10::ivalue::Future”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Device,std::allocator<c10::Device>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1479,11): warning C4251: “c10::ivalue::Await::elType_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::ivalue::Await”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1480,11): warning C4251: “c10::ivalue::Await::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::ivalue::Await”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1481,23): warning C4251: “c10::ivalue::Await::args_”:“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口以供“c10::ivalue::Await”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1482,27): warning C4251: “c10::ivalue::Await::fn_”:“std::function<c10::IValue (void)>”需要有 dll 接口以供“c10::ivalue::Await”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<c10::IValue (void)>”的声明
  
D:\libtorch\libtorch\include\ATen\core\ivalue_inl.h(1622,23): warning C4251: “c10::ivalue::Object::slots_”:“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口以供“c10::ivalue::Object”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorNames.h(41,21): warning C4251: “at::namedinference::TensorName::origin_”:“c10::ArrayRef<at::Dimname>”需要有 dll 接口以供“at::namedinference::TensorName”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\ArrayRef.h(44,7):
      参见“c10::ArrayRef<at::Dimname>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorNames.h(72,17): warning C4251: “at::namedinference::TensorNames::names_”:“c10::SmallVector<at::namedinference::TensorName,10>”需要有 dll 接口以供“at::namedinference::TensorNames”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<at::namedinference::TensorName,10>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(206,15): warning C4251: “torch::autograd::AutogradMeta::name_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(209,25): warning C4251: “torch::autograd::AutogradMeta::grad_fn_”:“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::Node>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(210,23): warning C4251: “torch::autograd::AutogradMeta::grad_accumulator_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(210,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(210,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(210,23): warning C4251:             _Ty=torch::autograd::Node
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(210,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::Node
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(221,40): warning C4251: “torch::autograd::AutogradMeta::fw_grad_”:“std::shared_ptr<torch::autograd::ForwardGrad>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::ForwardGrad>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(233,49): warning C4251: “torch::autograd::AutogradMeta::hooks_”:“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(234,31): warning C4251: “torch::autograd::AutogradMeta::cpp_hooks_list_”:“std::shared_ptr<torch::autograd::hooks_list>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::hooks_list>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(240,43): warning C4251: “torch::autograd::AutogradMeta::post_acc_grad_hooks_”:“std::unique_ptr<torch::autograd::PostAccumulateGradHook,std::default_delete<torch::autograd::PostAccumulateGradHook>>”需要有 dll 接口以供“torch::autograd::AutogradMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::autograd::PostAccumulateGradHook,std::default_delete<torch::autograd::PostAccumulateGradHook>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(421,29): warning C4251: “torch::autograd::ViewInfo::view_fn_”:“std::unique_ptr<torch::autograd::ViewFunc,std::default_delete<torch::autograd::ViewFunc>>”需要有 dll 接口以供“torch::autograd::ViewInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::autograd::ViewFunc,std::default_delete<torch::autograd::ViewFunc>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(425,44): warning C4251: “torch::autograd::ViewInfo::rev_view_fn_”:“std::function<torch::autograd::Variable (const torch::autograd::Variable &)>”需要有 dll 接口以供“torch::autograd::ViewInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<torch::autograd::Variable (const torch::autograd::Variable &)>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(687,27): warning C4251: “torch::autograd::DifferentiableViewMeta::backward_info_”:“std::optional<torch::autograd::ViewInfo>”需要有 dll 接口以供“torch::autograd::DifferentiableViewMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::autograd::ViewInfo>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable.h(688,27): warning C4251: “torch::autograd::DifferentiableViewMeta::forward_info_”:“std::optional<torch::autograd::ViewInfo>”需要有 dll 接口以供“torch::autograd::DifferentiableViewMeta”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::autograd::ViewInfo>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(176,15): warning C4251: “c10::Argument::name_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(177,11): warning C4251: “c10::Argument::type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(178,11): warning C4251: “c10::Argument::real_type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(183,26): warning C4251: “c10::Argument::N_”:“std::optional<int32_t>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int32_t>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(185,25): warning C4251: “c10::Argument::default_value_”:“std::optional<c10::IValue>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::IValue>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(189,30): warning C4251: “c10::Argument::alias_info_”:“std::unique_ptr<c10::AliasInfo,std::default_delete<c10::AliasInfo>>”需要有 dll 接口以供“c10::Argument”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::AliasInfo,std::default_delete<c10::AliasInfo>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(312,16): warning C4251: “c10::FunctionSchema::name_”:“c10::OperatorName”需要有 dll 接口以供“c10::FunctionSchema”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\operator_name.h(16,8):
      参见“c10::OperatorName”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(313,25): warning C4251: “c10::FunctionSchema::arguments_”:“std::vector<c10::Argument,std::allocator<c10::Argument>>”需要有 dll 接口以供“c10::FunctionSchema”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Argument,std::allocator<c10::Argument>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(314,25): warning C4251: “c10::FunctionSchema::returns_”:“std::vector<c10::Argument,std::allocator<c10::Argument>>”需要有 dll 接口以供“c10::FunctionSchema”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Argument,std::allocator<c10::Argument>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\function_schema.h(326,36): warning C4251: “c10::FunctionSchema::alias_kind_”:“std::optional<c10::AliasAnalysisKind>”需要有 dll 接口以供“c10::FunctionSchema”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::AliasAnalysisKind>”的声明
  
D:\libtorch\libtorch\include\ATen\core\boxing\BoxedKernel.h(207,38): warning C4251: “c10::BoxedKernel::functor_”:“c10::intrusive_ptr<c10::OperatorKernel,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“c10::BoxedKernel”的客户端使用
D:\libtorch\libtorch\include\ATen\core\boxing\BoxedKernel.h(207,38): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\boxing\BoxedKernel.h(207,38): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\boxing\BoxedKernel.h(207,38): warning C4251:             TTarget=c10::OperatorKernel
D:\libtorch\libtorch\include\ATen\core\boxing\BoxedKernel.h(207,38): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::OperatorKernel,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::OperatorKernel
          ]
  
D:\libtorch\libtorch\include\ATen\core\dispatch\CppSignature.h(60,19): warning C4251: “c10::impl::CppSignature::signature_”:“std::type_index”需要有 dll 接口以供“c10::impl::CppSignature”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\typeindex(25,19):
      参见“std::type_index”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(264,22): warning C4251: “c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_”:“c10::utils::bitset”需要有 dll 接口以供“c10::DispatchKeyExtractor”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\Bitset.h(19,8):
      参见“c10::utils::bitset”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(268,18): warning C4251: “c10::DispatchKeyExtractor::nonFallthroughKeys_”:“c10::DispatchKeySet”需要有 dll 接口以供“c10::DispatchKeyExtractor”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\DispatchKeySet.h(165,7):
      参见“c10::DispatchKeySet”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(231,16): warning C4251: “c10::impl::OperatorEntry::name_”:“c10::OperatorName”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\operator_name.h(16,8):
      参见“c10::OperatorName”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(232,34): warning C4251: “c10::impl::OperatorEntry::schema_”:“std::optional<c10::impl::AnnotatedSchema>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::impl::AnnotatedSchema>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(234,24): warning C4251: “c10::impl::OperatorEntry::tags_”:“std::vector<at::Tag,std::allocator<at::Tag>>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tag,std::allocator<at::Tag>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(239,22): warning C4251: “c10::impl::OperatorEntry::py_cache_”:“c10::PyHandleCache”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\core\PyHandleCache.h(38,7):
      参见“c10::PyHandleCache”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251: “c10::impl::OperatorEntry::kernels_”:“ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251:             K=c10::DispatchKey,
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251:             V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(281,7): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\flat_hash_map.h(1920,7):
      参见“ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”的声明
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(297,40): warning C4251: “c10::impl::OperatorEntry::cpp_signature_”:“std::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(298,40): warning C4251: “c10::impl::OperatorEntry::sym_cpp_signature_”:“std::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\OperatorEntry.h(301,38): warning C4251: “c10::impl::OperatorEntry::report_error_callback_”:“std::unique_ptr<c10::SafePyObject,std::default_delete<c10::SafePyObject>>”需要有 dll 接口以供“c10::impl::OperatorEntry”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::SafePyObject,std::default_delete<c10::SafePyObject>>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(86,32): warning C4251: “at::StringView::owned_str_ptr_”:“std::shared_ptr<std::string>”需要有 dll 接口以供“at::StringView”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<std::string>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(503,17): warning C4251: “at::RecordFunction::step_callbacks_”:“at::StepCallbacks”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\record_function.h(258,8):
      参见“at::StepCallbacks”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(515,23): warning C4251: “at::RecordFunction::ctx_”:“c10::SmallVector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,4>”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,4>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(517,43): warning C4251: “at::RecordFunction::fn_”:“std::variant<std::string,at::RecordFunction::schema_ref_t>”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<std::string,at::RecordFunction::schema_ref_t>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(520,31): warning C4251: “at::RecordFunction::inputs_”:“c10::ArrayRef<const c10::IValue>”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\ArrayRef.h(44,7):
      参见“c10::ArrayRef<const c10::IValue>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(521,43): warning C4251: “at::RecordFunction::kwinputs_”:“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(522,28): warning C4251: “at::RecordFunction::outputs_”:“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口以供“at::RecordFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
  
D:\libtorch\libtorch\include\ATen\record_function.h(791,27): warning C4251: “at::RecordFunctionTLS::sorted_tls_callbacks_”:“std::vector<at::RecordFunctionCallbacksEntry,std::allocator<at::RecordFunctionCallbacksEntry>>”需要有 dll 接口以供“at::RecordFunctionTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::RecordFunctionCallbacksEntry,std::allocator<at::RecordFunctionCallbacksEntry>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(396,26): warning C4251: “c10::Dispatcher::operators_”:“std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\list(759,7):
      参见“std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251: “c10::Dispatcher::operatorLookupTable_”:“c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251:             K=c10::OperatorName,
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251:             V=c10::OperatorHandle
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(399,7): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\LeftRight.h(55,7):
      参见“c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>”的声明
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(406,48): warning C4251: “c10::Dispatcher::libraries_”:“ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<std::string,std::string>>>”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\flat_hash_map.h(1920,7):
      参见“ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<std::string,std::string>>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(411,53): warning C4251: “c10::Dispatcher::listeners_”:“std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(425,27): warning C4251: “c10::Dispatcher::cond_var_”:“std::condition_variable”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\mutex(532,19):
      参见“std::condition_variable”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(431,26): warning C4251: “c10::Dispatcher::guard_”:“std::shared_ptr<c10::Dispatcher::Guard>”需要有 dll 接口以供“c10::Dispatcher”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::Dispatcher::Guard>”的声明
  
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(582,48): warning C4251: “c10::OperatorHandle::operatorIterator_”:“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>”需要有 dll 接口以供“c10::OperatorHandle”的客户端使用
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(582,48): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(582,48): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(582,48): warning C4251:             _Ty=c10::Dispatcher::OperatorDef
D:\libtorch\libtorch\include\ATen\core\dispatch\Dispatcher.h(582,48): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\list(224,7):
      参见“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>”的声明
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  
D:\libtorch\libtorch\include\ATen\core\op_registration\op_registration.h(434,63): warning C4251: “c10::RegisterOperators::Options::schemaOrName_”:“std::optional<std::variant<c10::OperatorName,c10::FunctionSchema>>”需要有 dll 接口以供“c10::RegisterOperators::Options”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::variant<c10::OperatorName,c10::FunctionSchema>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\op_registration\op_registration.h(436,43): warning C4251: “c10::RegisterOperators::Options::kernels”:“std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>”需要有 dll 接口以供“c10::RegisterOperators::Options”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\op_registration\op_registration.h(437,38): warning C4251: “c10::RegisterOperators::Options::aliasAnalysisKind_”:“std::optional<c10::AliasAnalysisKind>”需要有 dll 接口以供“c10::RegisterOperators::Options”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::AliasAnalysisKind>”的声明
  
D:\libtorch\libtorch\include\ATen\core\op_registration\op_registration.h(588,39): warning C4251: “c10::RegisterOperators::registrars_”:“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”需要有 dll 接口以供“c10::RegisterOperators”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(305,35): warning C4251: “torch::CppFunction::dispatch_key_”:“std::optional<c10::DispatchKey>”需要有 dll 接口以供“torch::CppFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::DispatchKey>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(307,42): warning C4251: “torch::CppFunction::cpp_signature_”:“std::optional<c10::impl::CppSignature>”需要有 dll 接口以供“torch::CppFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::impl::CppSignature>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(308,40): warning C4251: “torch::CppFunction::schema_”:“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”需要有 dll 接口以供“torch::CppFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(309,15): warning C4251: “torch::CppFunction::debug_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::CppFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(862,30): warning C4251: “torch::Library::ns_”:“std::optional<std::string>”需要有 dll 接口以供“torch::Library”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(863,35): warning C4251: “torch::Library::dispatch_key_”:“std::optional<c10::DispatchKey>”需要有 dll 接口以供“torch::Library”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::DispatchKey>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(864,54): warning C4251: “torch::Library::python_module_”:“std::optional<std::pair<const char *,const char *>>”需要有 dll 接口以供“torch::Library”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::pair<const char *,const char *>>”的声明
  
D:\libtorch\libtorch\include\torch\library.h(868,44): warning C4251: “torch::Library::registrars_”:“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”需要有 dll 接口以供“torch::Library”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(53,11): warning C4251: “c10::ClassAttribute::attributeType_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::ClassAttribute”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(54,15): warning C4251: “c10::ClassAttribute::attributeName_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::ClassAttribute”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(410,28): warning C4251: “c10::ClassType::constantNames_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(411,23): warning C4251: “c10::ClassType::constantValues_”:“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(413,34): warning C4251: “c10::ClassType::compilation_unit_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“c10::ClassType”的客户端使用
D:\libtorch\libtorch\include\ATen\core\class_type.h(413,34): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\class_type.h(413,34): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\class_type.h(413,34): warning C4251:             _Ty=torch::jit::CompilationUnit
D:\libtorch\libtorch\include\ATen\core\class_type.h(413,34): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::CompilationUnit
          ]
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(416,31): warning C4251: “c10::ClassType::attributes_”:“std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(419,24): warning C4251: “c10::ClassType::attributeTypes_”:“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(422,38): warning C4251: “c10::ClassType::methods_”:“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(423,38): warning C4251: “c10::ClassType::staticmethods_”:“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(426,38): warning C4251: “c10::ClassType::forward_hooks_”:“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(427,38): warning C4251: “c10::ClassType::forward_pre_hooks_”:“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(430,25): warning C4251: “c10::ClassType::properties_”:“std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(435,15): warning C4251: “c10::ClassType::doc_string_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\ATen\core\class_type.h(438,28): warning C4251: “c10::ClassType::unresolved_class_attributes_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“c10::ClassType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\custom_class_detail.h(214,15): warning C4251: “torch::detail::class_base::qualClassName”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::detail::class_base”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\custom_class_detail.h(215,20): warning C4251: “torch::detail::class_base::classTypePtr”:“std::shared_ptr<c10::ClassType>”需要有 dll 接口以供“torch::detail::class_base”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::ClassType>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\anomaly_mode.h(67,15): warning C4251: “torch::autograd::AnomalyMetadata::traceback_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::autograd::AnomalyMetadata”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\anomaly_mode.h(68,25): warning C4251: “torch::autograd::AnomalyMetadata::parent_”:“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口以供“torch::autograd::AnomalyMetadata”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::Node>”的声明
  
D:\libtorch\libtorch\include\ATen\PythonTorchFunctionTLS.h(29,51): warning C4251: “at::impl::PythonTorchFunctionTLS::stack_”:“std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>”需要有 dll 接口以供“at::impl::PythonTorchFunctionTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>”的声明
  
D:\libtorch\libtorch\include\ATen\SavedTensorHooks.h(18,63): warning C4251: “at::impl::SavedTensorDefaultHooksTLS::stack”:“std::stack<std::pair<c10::SafePyObject,c10::SafePyObject>,std::deque<std::pair<c10::SafePyObject,c10::SafePyObject>,std::allocator<std::pair<c10::SafePyObject,c10::SafePyObject>>>>”需要有 dll 接口以供“at::impl::SavedTensorDefaultHooksTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\stack(27,7):
      参见“std::stack<std::pair<c10::SafePyObject,c10::SafePyObject>,std::deque<std::pair<c10::SafePyObject,c10::SafePyObject>,std::allocator<std::pair<c10::SafePyObject,c10::SafePyObject>>>>”的声明
  
D:\libtorch\libtorch\include\ATen\SavedTensorHooks.h(25,30): warning C4251: “at::impl::SavedTensorDefaultHooksTLS::disabled_error_message”:“std::optional<std::string>”需要有 dll 接口以供“at::impl::SavedTensorDefaultHooksTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\ATen\ThreadLocalPythonObjects.h(18,71): warning C4251: “at::impl::ThreadLocalPythonObjects::obj_dict_”:“std::unordered_map<std::string,std::shared_ptr<c10::SafePyObject>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::shared_ptr<c10::SafePyObject>>>>”需要有 dll 接口以供“at::impl::ThreadLocalPythonObjects”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<std::string,std::shared_ptr<c10::SafePyObject>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::shared_ptr<c10::SafePyObject>>>>”的声明
  
D:\libtorch\libtorch\include\c10\core\impl\TorchDispatchModeTLS.h(52,60): warning C4251: “c10::impl::TorchDispatchModeTLS::stack_”:“std::vector<std::shared_ptr<c10::impl::PyObject_TorchDispatchMode>,std::allocator<std::shared_ptr<c10::impl::PyObject_TorchDispatchMode>>>”需要有 dll 接口以供“c10::impl::TorchDispatchModeTLS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::shared_ptr<c10::impl::PyObject_TorchDispatchMode>,std::allocator<std::shared_ptr<c10::impl::PyObject_TorchDispatchMode>>>”的声明
  
D:\libtorch\libtorch\include\ATen\ThreadLocalState.h(47,46): warning C4251: “at::ThreadLocalState::debug_info_”:“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口以供“at::ThreadLocalState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
  
D:\libtorch\libtorch\include\ATen\ThreadLocalState.h(59,54): warning C4251: “at::ThreadLocalState::functorch_tls_”:“std::shared_ptr<const at::functorch::FuncTorchTLSBase>”需要有 dll 接口以供“at::ThreadLocalState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<const at::functorch::FuncTorchTLSBase>”的声明
  
D:\libtorch\libtorch\include\ATen\CPUGeneratorImpl.h(36,15): warning C4251: “at::CPUGeneratorImpl::engine_”:“at::mt19937_engine”需要有 dll 接口以供“at::CPUGeneratorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\MT19937RNGEngine.h(110,7):
      参见“at::mt19937_engine”的声明
  
D:\libtorch\libtorch\include\ATen\CPUGeneratorImpl.h(37,24): warning C4251: “at::CPUGeneratorImpl::next_float_normal_sample_”:“std::optional<float>”需要有 dll 接口以供“at::CPUGeneratorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<float>”的声明
  
D:\libtorch\libtorch\include\ATen\CPUGeneratorImpl.h(38,25): warning C4251: “at::CPUGeneratorImpl::next_double_normal_sample_”:“std::optional<double>”需要有 dll 接口以供“at::CPUGeneratorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\ATen\Context.h(444,26): warning C4251: “at::Context::sm_carveout”:“std::optional<int32_t>”需要有 dll 接口以供“at::Context”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int32_t>”的声明
  
D:\libtorch\libtorch\include\ATen\Context.h(468,30): warning C4251: “at::Context::quantized_engine”:“std::optional<c10::QEngine>”需要有 dll 接口以供“at::Context”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::QEngine>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(147,28): warning C4251: “at::TensorGeometry::sizes_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“at::TensorGeometry”的客户端使用
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(147,28): warning C4251:         with
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(147,28): warning C4251:         [
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(147,28): warning C4251:             T=c10::SymInt
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(147,28): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=c10::SymInt
          ]
  
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(148,28): warning C4251: “at::TensorGeometry::strides_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“at::TensorGeometry”的客户端使用
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(148,28): warning C4251:         with
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(148,28): warning C4251:         [
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(148,28): warning C4251:             T=c10::SymInt
D:\libtorch\libtorch\include\ATen\TensorGeometry.h(148,28): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=c10::SymInt
          ]
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(92,15): warning C4251: “at::TensorMaker::sizes_”:“c10::ArrayRef<int64_t>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\ArrayRef.h(44,7):
      参见“c10::ArrayRef<int64_t>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(93,23): warning C4251: “at::TensorMaker::strides_”:“c10::OptionalArrayRef<int64_t>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\OptionalArrayRef.h(24,7):
      参见“c10::OptionalArrayRef<int64_t>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(94,26): warning C4251: “at::TensorMaker::storage_offset_”:“std::optional<int64_t>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(95,30): warning C4251: “at::TensorMaker::deleter_”:“std::function<void (void *)>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<void (void *)>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(96,41): warning C4251: “at::TensorMaker::ctx_”:“std::unique_ptr<void,c10::DeleterFnPtr>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<void,c10::DeleterFnPtr>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\from_blob.h(97,25): warning C4251: “at::TensorMaker::device_”:“std::optional<c10::Device>”需要有 dll 接口以供“at::TensorMaker”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\ATen\NestedTensorImpl.h(174,47): warning C4251: “at::native::NestedTensorImpl::opt_sizes_”:“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”需要有 dll 接口以供“at::native::NestedTensorImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\input_metadata.h(107,17): warning C4251: “torch::autograd::InputMetadata::shape_”:“std::variant<torch::autograd::SymIntSmallVec,at::Tensor>”需要有 dll 接口以供“torch::autograd::InputMetadata”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::autograd::SymIntSmallVec,at::Tensor>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(92,32): warning C4251: “torch::autograd::SavedVariable::fw_grad_”:“std::shared_ptr<torch::autograd::ForwardGrad>”需要有 dll 接口以供“torch::autograd::SavedVariable”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::ForwardGrad>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(100,23): warning C4251: “torch::autograd::SavedVariable::weak_grad_fn_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“torch::autograd::SavedVariable”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(100,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(100,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(100,23): warning C4251:             _Ty=torch::autograd::Node
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(100,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::Node
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(114,39): warning C4251: “torch::autograd::SavedVariable::hooks_”:“std::unique_ptr<torch::autograd::SavedVariableHooks,std::default_delete<torch::autograd::SavedVariableHooks>>”需要有 dll 接口以供“torch::autograd::SavedVariable”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::autograd::SavedVariableHooks,std::default_delete<torch::autograd::SavedVariableHooks>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(118,25): warning C4251: “torch::autograd::SavedVariable::grad_fn_”:“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口以供“torch::autograd::SavedVariable”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::Node>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\saved_variable.h(123,25): warning C4251: “torch::autograd::SavedVariable::grad_accumulator_”:“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口以供“torch::autograd::SavedVariable”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::autograd::Node>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(113,30): warning C4251: “std::enable_shared_from_this<torch::autograd::Node>::_Wptr”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“std::enable_shared_from_this<torch::autograd::Node>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(113,30): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(113,30): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(113,30): warning C4251:             _Ty=torch::autograd::Node
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(113,30): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::Node
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(684,13): warning C4251: “torch::autograd::Node::next_edges_”:“std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(686,36): warning C4251: “torch::autograd::Node::anomaly_metadata_”:“std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(698,49): warning C4251: “torch::autograd::Node::pre_hooks_”:“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(699,49): warning C4251: “torch::autograd::Node::tensor_pre_hooks_”:“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(701,7): warning C4251: “torch::autograd::Node::retains_grad_hooks_”:“std::unordered_map<size_t,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const size_t,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<size_t,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const size_t,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(702,50): warning C4251: “torch::autograd::Node::post_hooks_”:“std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(703,37): warning C4251: “torch::autograd::Node::input_metadata_”:“c10::SmallVector<torch::autograd::InputMetadata,2>”需要有 dll 接口以供“torch::autograd::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<torch::autograd::InputMetadata,2>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(204,23): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(212,23): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(219,23): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(225,32): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\function.h(327,28): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(16,28): warning C4251: “torch::autograd::VariableInfo::size”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::autograd::VariableInfo”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(16,28): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(16,28): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(16,28): warning C4251:             T=c10::SymInt
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(16,28): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=c10::SymInt
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\variable_info.h(20,27): warning C4251: “torch::autograd::VariableInfo::the_var”:“std::optional<at::Tensor>”需要有 dll 接口以供“torch::autograd::VariableInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<at::Tensor>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(639,45): warning C4267: “参数”: 从“size_t”转换到“uint16_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251: “torch::autograd::AutogradContext::saved_data”:“ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<_Kty,_Ty>>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251:             _Kty=std::string,
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251:             _Ty=c10::IValue
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(132,47): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\flat_hash_map.h(1920,7):
      参见“ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<_Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(162,39): warning C4251: “torch::autograd::AutogradContext::non_differentiable_”:“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_set(59,7):
      参见“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(163,39): warning C4251: “torch::autograd::AutogradContext::dirty_inputs_”:“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_set(59,7):
      参见“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(164,47): warning C4251: “torch::autograd::AutogradContext::saved_variables_”:“std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(165,17): warning C4251: “torch::autograd::AutogradContext::to_save_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(171,23): warning C4251: “torch::autograd::AutogradContext::grad_fn_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(171,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(171,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(171,23): warning C4251:             _Ty=torch::autograd::Node
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(171,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::Node
          ]
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(176,32): warning C4251: “torch::autograd::AutogradContext::saved_variables_override_”:“std::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\custom_function.h(177,36): warning C4251: “torch::autograd::AutogradContext::needs_input_grad_override_”:“std::optional<std::vector<bool,std::allocator<bool>>>”需要有 dll 接口以供“torch::autograd::AutogradContext”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<bool,std::allocator<bool>>>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(141,16): warning C4251: “at::OperandInfo::stride_bytes”:“c10::SmallVector<int64_t,6>”需要有 dll 接口以供“at::OperandInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,6>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(150,25): warning C4251: “at::OperandInfo::device”:“std::optional<c10::Device>”需要有 dll 接口以供“at::OperandInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(224,31): warning C4251: “at::OperandInfo::tensor_base_”:“c10::MaybeOwned<at::TensorBase>”需要有 dll 接口以供“at::OperandInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\MaybeOwned.h(65,7):
      参见“c10::MaybeOwned<at::TensorBase>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(225,31): warning C4251: “at::OperandInfo::original_tensor_base_”:“c10::MaybeOwned<at::TensorBase>”需要有 dll 接口以供“at::OperandInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\MaybeOwned.h(65,7):
      参见“c10::MaybeOwned<at::TensorBase>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(666,13): warning C4251: “at::TensorIteratorBase::shape_”:“c10::SmallVector<int64_t,5>”需要有 dll 接口以供“at::TensorIteratorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,5>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(676,13): warning C4251: “at::TensorIteratorBase::perm_”:“c10::SmallVector<int64_t,5>”需要有 dll 接口以供“at::TensorIteratorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,5>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(689,13): warning C4251: “at::TensorIteratorBase::view_offsets_”:“c10::SmallVector<int64_t,5>”需要有 dll 接口以供“at::TensorIteratorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,5>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(692,14): warning C4251: “at::TensorIteratorBase::names_”:“c10::SmallVector<at::Dimname,5>”需要有 dll 接口以供“at::TensorIteratorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<at::Dimname,5>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(703,31): warning C4251: “at::TensorIteratorBase::operands_”:“c10::SmallVector<at::OperandInfo,4>”需要有 dll 接口以供“at::TensorIteratorBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<at::OperandInfo,4>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(973,47): warning C4251: “at::TensorIteratorConfig::tensors_”:“c10::SmallVector<c10::MaybeOwned<at::TensorBase>,4>”需要有 dll 接口以供“at::TensorIteratorConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<c10::MaybeOwned<at::TensorBase>,4>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(977,28): warning C4251: “at::TensorIteratorConfig::static_shape_”:“std::optional<c10::DimVector>”需要有 dll 接口以供“at::TensorIteratorConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::DimVector>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(978,29): warning C4251: “at::TensorIteratorConfig::static_dtype_”:“std::optional<c10::ScalarType>”需要有 dll 接口以供“at::TensorIteratorConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::ScalarType>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(979,25): warning C4251: “at::TensorIteratorConfig::static_device_”:“std::optional<c10::Device>”需要有 dll 接口以供“at::TensorIteratorConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::Device>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(992,26): warning C4251: “at::TensorIteratorConfig::const_tensor_indices_”:“c10::SmallVector<uint64_t,4>”需要有 dll 接口以供“at::TensorIteratorConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<uint64_t,4>”的声明
  
D:\libtorch\libtorch\include\ATen\TensorIterator.h(1021,50): warning C4251: “at::SplitUntil32Bit::iterator::vec”:“std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>”需要有 dll 接口以供“at::SplitUntil32Bit::iterator”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>”的声明
  
D:\libtorch\libtorch\include\ATen\ops\index_meta.h(42,35): warning C4251: “at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>::sizes”:“c10::SmallVector<int64_t,5>”需要有 dll 接口以供“at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,5>”的声明
      D:\libtorch\libtorch\include\ATen\ops\index_meta.h(42,35):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\ATen\ops\index_meta.h(23,34):
          在编译类模板“at::meta::structured_index_Tensor::precompute_out”时
  
D:\libtorch\libtorch\include\ATen\ops\index_meta.h(43,15): warning C4251: “at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>::strides”:“c10::SmallVector<int64_t,5>”需要有 dll 接口以供“at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,28):
      参见“c10::SmallVector<int64_t,5>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(97,23): warning C4251: “torch::data::samplers::DistributedRandomSampler::all_indices_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::data::samplers::DistributedRandomSampler”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(97,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(97,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(97,23): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(97,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(130,23): warning C4251: “torch::data::samplers::DistributedSequentialSampler::all_indices_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::data::samplers::DistributedSequentialSampler”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(130,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(130,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(130,23): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(130,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\imethod.h(50,36): warning C4251: “torch::IMethod::argumentNames_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::IMethod”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(126,37): warning C4275: 非 dll 接口 struct“torch::jit::AttributeValue”用作 dll 接口 struct“torch::jit::GraphAttr”的基
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(56,8):
      参见“torch::jit::AttributeValue”的声明
      D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(126,18):
      参见“torch::jit::GraphAttr”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(140,26): warning C4251: “torch::jit::GraphAttr::value_”:“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口以供“torch::jit::GraphAttr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::Graph>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(143,38): warning C4275: 非 dll 接口 struct“torch::jit::AttributeValue”用作 dll 接口 struct“torch::jit::GraphsAttr”的基
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(56,8):
      参见“torch::jit::AttributeValue”的声明
      D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(143,18):
      参见“torch::jit::GraphsAttr”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\attributes.h(157,13): warning C4251: “torch::jit::GraphsAttr::value_”:“std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>”需要有 dll 接口以供“torch::jit::GraphsAttr”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(317,33): warning C4251: “torch::jit::StringCordView::pieces_”:“std::vector<std::string_view,std::allocator<std::string_view>>”需要有 dll 接口以供“torch::jit::StringCordView”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string_view,std::allocator<std::string_view>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(318,23): warning C4251: “torch::jit::StringCordView::accumulated_sizes_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::jit::StringCordView”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(318,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(318,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(318,23): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(318,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(319,45): warning C4251: “torch::jit::StringCordView::owned_strings_”:“std::vector<std::shared_ptr<std::string>,std::allocator<std::shared_ptr<std::string>>>”需要有 dll 接口以供“torch::jit::StringCordView”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::shared_ptr<std::string>,std::allocator<std::shared_ptr<std::string>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(440,30): warning C4251: “torch::jit::Source::filename_”:“std::optional<std::string>”需要有 dll 接口以供“torch::jit::Source”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(445,23): warning C4251: “torch::jit::Source::line_starting_offsets_”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::jit::Source”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(445,23): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(445,23): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(445,23): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(445,23): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(447,41): warning C4251: “torch::jit::Source::gen_ranges_”:“std::shared_ptr<torch::jit::SourceRangeUnpickler>”需要有 dll 接口以供“torch::jit::Source”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::SourceRangeUnpickler>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(538,27): warning C4251: “torch::jit::SourceRange::source_view_”:“std::shared_ptr<torch::jit::Source>”需要有 dll 接口以供“torch::jit::SourceRange”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::Source>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(543,28): warning C4251: “torch::jit::SourceRange::start_iter_”:“torch::jit::StringCordView::Iterator”需要有 dll 接口以供“torch::jit::SourceRange”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\jit\frontend\source_range.h(160,10):
      参见“torch::jit::StringCordView::Iterator”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(31,12): warning C4251: “torch::jit::Scope::parent_”:“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“torch::jit::Scope”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(31,12): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(31,12): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(31,12): warning C4251:             TTarget=torch::jit::Scope
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(31,12): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=torch::jit::Scope
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(126,38): warning C4251: “torch::jit::InlinedCallStack::callee_”:“std::optional<torch::jit::InlinedCallStackPtr>”需要有 dll 接口以供“torch::jit::InlinedCallStack”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::jit::InlinedCallStackPtr>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(136,21): warning C4251: “torch::jit::InlinedCallStack::fn_name_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::jit::InlinedCallStack”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\scope.h(139,37): warning C4251: “torch::jit::InlinedCallStack::module_instance_info_”:“std::optional<torch::jit::ModuleInstanceInfo>”需要有 dll 接口以供“torch::jit::InlinedCallStack”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::jit::ModuleInstanceInfo>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\constants.h(21,61): warning C4275: 非 dll 接口 class“std::runtime_error”用作 dll 接口 struct“torch::jit::constant_not_supported_error”的基
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\stdexcept(100,19):
      参见“std::runtime_error”的声明
      D:\libtorch\libtorch\include\torch\csrc\jit\ir\constants.h(21,18):
      参见“torch::jit::constant_not_supported_error”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\operator.h(258,46): warning C4251: “torch::jit::Operator::op_”:“std::variant<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>”需要有 dll 接口以供“torch::jit::Operator”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(95,43): warning C4251: “torch::utils::SchemaInfo::wildcard_set_”:“std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>”需要有 dll 接口以供“torch::utils::SchemaInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_set(59,7):
      参见“std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(98,43): warning C4251: “torch::utils::SchemaInfo::container_set_”:“std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>”需要有 dll 接口以供“torch::utils::SchemaInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_set(59,7):
      参见“std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(101,47): warning C4251: “torch::utils::SchemaInfo::value_map_”:“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”需要有 dll 接口以供“torch::utils::SchemaInfo”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(104,43): warning C4251: “torch::utils::SchemaInfo::input_alias_map_”:“std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>”需要有 dll 接口以供“torch::utils::SchemaInfo”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(104,43): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(104,43): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(104,43): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(104,43): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(107,43): warning C4251: “torch::utils::SchemaInfo::output_alias_map_”:“std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>”需要有 dll 接口以供“torch::utils::SchemaInfo”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(107,43): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(107,43): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(107,43): warning C4251:             T=size_t
D:\libtorch\libtorch\include\torch\csrc\utils\schema_info.h(107,43): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>”的声明
          with
          [
              T=size_t
          ]
  
D:\libtorch\libtorch\include\ATen\core\enum_type.h(97,11): warning C4251: “c10::EnumType::value_type_”:“c10::Type::SingletonOrSharedTypePtr<c10::Type>”需要有 dll 接口以供“c10::EnumType”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\jit_type_base.h(171,9):
      参见“c10::Type::SingletonOrSharedTypePtr<c10::Type>”的声明
  
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251: “c10::EnumType::enum_names_values_”:“std::vector<c10::EnumNameValue,std::allocator<std::pair<_Kty,_Ty>>>”需要有 dll 接口以供“c10::EnumType”的客户端使用
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251:             _Kty=std::string,
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251:             _Ty=c10::IValue
D:\libtorch\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::EnumNameValue,std::allocator<std::pair<_Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
  
D:\libtorch\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251: “c10::EnumType::cu_”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“c10::EnumType”的客户端使用
D:\libtorch\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251:         with
D:\libtorch\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251:         [
D:\libtorch\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251:             _Ty=torch::jit::CompilationUnit
D:\libtorch\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::CompilationUnit
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(328,23): warning C4251: “torch::jit::Node::inputs_”:“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(329,23): warning C4251: “torch::jit::Node::outputs_”:“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(331,23): warning C4251: “torch::jit::Node::blocks_”:“std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(334,30): warning C4251: “torch::jit::Node::source_range_”:“std::optional<torch::jit::SourceRange>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::jit::SourceRange>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(335,12): warning C4251: “torch::jit::Node::scope_”:“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(335,12): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(335,12): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(335,12): warning C4251:             TTarget=torch::jit::Scope
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(335,12): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=torch::jit::Scope
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(336,38): warning C4251: “torch::jit::Node::callstack_”:“std::optional<torch::jit::InlinedCallStackPtr>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::jit::InlinedCallStackPtr>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(344,31): warning C4251: “torch::jit::Node::wrap_”:“std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(350,30): warning C4251: “torch::jit::Node::historic_schema_name_”:“std::optional<std::string>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(958,22): warning C4251: “torch::jit::Node::values_”:“std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>”需要有 dll 接口以供“torch::jit::Node”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(1571,45): warning C4251: “torch::jit::ProfileIValueOp::callback_”:“std::function<void (torch::jit::Stack &)>”需要有 dll 接口以供“torch::jit::ProfileIValueOp”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<void (torch::jit::Stack &)>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\ir\ir.h(1649,70): warning C4251: “torch::jit::OperatorSet::ops”:“std::unordered_map<c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>,std::hash<c10::Symbol>,std::equal_to<c10::Symbol>,std::allocator<std::pair<const c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>>>>”需要有 dll 接口以供“torch::jit::OperatorSet”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>,std::hash<c10::Symbol>,std::equal_to<c10::Symbol>,std::allocator<std::pair<const c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(207,21): warning C4251: “torch::jit::ArgumentSpecCreator::instructions_”:“std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>”需要有 dll 接口以供“torch::jit::ArgumentSpecCreator”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(274,37): warning C4244: “+=”: 从“int64_t”转换到“int32_t”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(452,38): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\interpreter.h(76,42): warning C4251: “torch::jit::Code::pImpl”:“std::shared_ptr<torch::jit::interpreter::CodeImpl>”需要有 dll 接口以供“torch::jit::Code”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::interpreter::CodeImpl>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\runtime\graph_executor.h(97,42): warning C4251: “torch::jit::GraphExecutor::pImpl”:“std::shared_ptr<torch::jit::GraphExecutorImplBase>”需要有 dll 接口以供“torch::jit::GraphExecutor”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::GraphExecutorImplBase>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(135,22): warning C4251: “torch::jit::GraphFunction::name_”:“c10::QualifiedName”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\qualified_name.h(12,8):
      参见“c10::QualifiedName”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(137,26): warning C4251: “torch::jit::GraphFunction::graph_”:“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::Graph>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(141,48): warning C4251: “torch::jit::GraphFunction::executor_execution_mode_”:“std::optional<torch::jit::ExecutorExecutionMode>”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::jit::ExecutorExecutionMode>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(155,32): warning C4251: “torch::jit::GraphFunction::compile_mutex”:“std::recursive_mutex”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\mutex(106,19):
      参见“std::recursive_mutex”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(167,39): warning C4251: “torch::jit::GraphFunction::function_creator_”:“std::function<void (torch::jit::GraphFunction &)>”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<void (torch::jit::GraphFunction &)>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\function_impl.h(172,43): warning C4251: “torch::jit::GraphFunction::schema_”:“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”需要有 dll 接口以供“torch::jit::GraphFunction”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\method.h(72,13): warning C4251: “torch::jit::Method::owner_”:“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“torch::jit::Method”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\api\method.h(72,13): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\api\method.h(72,13): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\api\method.h(72,13): warning C4251:             TTarget=c10::ivalue::Object
D:\libtorch\libtorch\include\torch\csrc\jit\api\method.h(72,13): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::ivalue::Object
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\object.h(192,21): warning C4251: “torch::jit::Object::_ivalue_”:“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口以供“torch::jit::Object”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\jit\api\object.h(192,21): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\jit\api\object.h(192,21): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\jit\api\object.h(192,21): warning C4251:             TTarget=c10::ivalue::Object
D:\libtorch\libtorch\include\torch\csrc\jit\api\object.h(192,21): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\intrusive_ptr.h(229,7):
      参见“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::ivalue::Object
          ]
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\compilation_unit.h(318,42): warning C4251: “torch::jit::CompilationUnit::functions_”:“std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>”需要有 dll 接口以供“torch::jit::CompilationUnit”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\compilation_unit.h(320,50): warning C4251: “torch::jit::CompilationUnit::dict_”:“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”需要有 dll 接口以供“torch::jit::CompilationUnit”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\compilation_unit.h(321,50): warning C4251: “torch::jit::CompilationUnit::classDict_”:“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”需要有 dll 接口以供“torch::jit::CompilationUnit”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\compilation_unit.h(328,34): warning C4251: “torch::jit::CompilationUnit::classes_”:“std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>”需要有 dll 接口以供“torch::jit::CompilationUnit”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\module.h(325,25): warning C4251: “torch::jit::Module::mem_to_delete_”:“std::shared_ptr<char>”需要有 dll 接口以供“torch::jit::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<char>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\module.h(328,50): warning C4251: “torch::jit::Module::traced_inputs_”:“c10::Dict<std::string,c10::impl::GenericList>”需要有 dll 接口以供“torch::jit::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\ATen\core\Dict.h(207,7):
      参见“c10::Dict<std::string,c10::impl::GenericList>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\jit\api\module.h(331,31): warning C4251: “torch::jit::Module::register_mutex_”:“std::shared_ptr<std::mutex>”需要有 dll 接口以供“torch::jit::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<std::mutex>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\serialize\input-archive.h(113,15): warning C4251: “torch::serialize::InputArchive::hierarchy_prefix_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::serialize::InputArchive”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\serialize\output-archive.h(77,41): warning C4251: “torch::serialize::OutputArchive::cu_”:“std::shared_ptr<torch::jit::CompilationUnit>”需要有 dll 接口以供“torch::serialize::OutputArchive”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<torch::jit::CompilationUnit>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(63,38): warning C4251: “std::enable_shared_from_this<torch::nn::Module>::_Wptr”:“std::weak_ptr<_Ty>”需要有 dll 接口以供“std::enable_shared_from_this<torch::nn::Module>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(63,38): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(63,38): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(63,38): warning C4251:             _Ty=torch::nn::Module
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(63,38): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3126,7):
      参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::nn::Module
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(552,36): warning C4251: “torch::nn::Module::parameters_”:“torch::OrderedDict<std::string,at::Tensor>”需要有 dll 接口以供“torch::nn::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\ordered_dict.h(13,7):
      参见“torch::OrderedDict<std::string,at::Tensor>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(600,36): warning C4251: “torch::nn::Module::buffers_”:“torch::OrderedDict<std::string,at::Tensor>”需要有 dll 接口以供“torch::nn::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\ordered_dict.h(13,7):
      参见“torch::OrderedDict<std::string,at::Tensor>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(603,53): warning C4251: “torch::nn::Module::children_”:“torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>”需要有 dll 接口以供“torch::nn::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\ordered_dict.h(13,7):
      参见“torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\module.h(606,38): warning C4251: “torch::nn::Module::name_”:“std::optional<std::string>”需要有 dll 接口以供“torch::nn::Module”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\profiler\orchestration\observer.h(68,28): warning C4251: “torch::profiler::impl::ExperimentalConfig::profiler_metrics”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::profiler::impl::ExperimentalConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\profiler\orchestration\observer.h(75,28): warning C4251: “torch::profiler::impl::ExperimentalConfig::performance_events”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::profiler::impl::ExperimentalConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\profiler\orchestration\observer.h(139,15): warning C4251: “torch::profiler::impl::ProfilerConfig::trace_id”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::profiler::impl::ProfilerConfig”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\profiler\util.h(74,15): warning C4251: “torch::profiler::impl::FileLineFunc::filename”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::profiler::impl::FileLineFunc”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\profiler\util.h(76,15): warning C4251: “torch::profiler::impl::FileLineFunc::funcname”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::profiler::impl::FileLineFunc”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(72,56): warning C4251: “torch::autograd::profiler::KinetoEvent::result_”:“std::shared_ptr<const torch::profiler::impl::Result>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<const torch::profiler::impl::Result>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(73,28): warning C4251: “torch::autograd::profiler::KinetoEvent::python_stack_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(76,37): warning C4251: “torch::autograd::profiler::KinetoEvent::shapes_”:“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(77,28): warning C4251: “torch::autograd::profiler::KinetoEvent::dtypes_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(78,28): warning C4251: “torch::autograd::profiler::KinetoEvent::concrete_inputs_”:“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(79,48): warning C4251: “torch::autograd::profiler::KinetoEvent::kwinputs_”:“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”需要有 dll 接口以供“torch::autograd::profiler::KinetoEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(111,28): warning C4251: “torch::autograd::profiler::ProfilerResult::events_”:“std::vector<torch::autograd::profiler::KinetoEvent,std::allocator<torch::autograd::profiler::KinetoEvent>>”需要有 dll 接口以供“torch::autograd::profiler::ProfilerResult”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::autograd::profiler::KinetoEvent,std::allocator<torch::autograd::profiler::KinetoEvent>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(112,72): warning C4251: “torch::autograd::profiler::ProfilerResult::trace_”:“std::unique_ptr<torch::profiler::impl::kineto::ActivityTraceWrapper,std::default_delete<torch::profiler::impl::kineto::ActivityTraceWrapper>>”需要有 dll 接口以供“torch::autograd::profiler::ProfilerResult”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::profiler::impl::kineto::ActivityTraceWrapper,std::default_delete<torch::profiler::impl::kineto::ActivityTraceWrapper>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_kineto.h(113,37): warning C4251: “torch::autograd::profiler::ProfilerResult::event_tree_”:“std::vector<torch::autograd::profiler::experimental_event_t,std::allocator<torch::autograd::profiler::experimental_event_t>>”需要有 dll 接口以供“torch::autograd::profiler::ProfilerResult”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::autograd::profiler::experimental_event_t,std::allocator<torch::autograd::profiler::experimental_event_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(255,37): warning C4251: “torch::autograd::profiler::LegacyEvent::shapes_”:“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”需要有 dll 接口以供“torch::autograd::profiler::LegacyEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(259,48): warning C4251: “torch::autograd::profiler::LegacyEvent::cuda_event”:“std::shared_ptr<void>”需要有 dll 接口以供“torch::autograd::profiler::LegacyEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<void>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(266,28): warning C4251: “torch::autograd::profiler::LegacyEvent::stack_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::autograd::profiler::LegacyEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(270,48): warning C4251: “torch::autograd::profiler::LegacyEvent::extra_args_”:“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”需要有 dll 接口以供“torch::autograd::profiler::LegacyEvent”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\unordered_map(61,7):
      参见“std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(359,34): warning C4251: “torch::autograd::profiler::RecordProfile::file_”:“std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>”需要有 dll 接口以供“torch::autograd::profiler::RecordProfile”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(396,65): warning C4251: “torch::autograd::profiler::TLSLegacyProfilerGuard::cb_”:“std::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>”需要有 dll 接口以供“torch::autograd::profiler::TLSLegacyProfilerGuard”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\autograd\profiler_legacy.h(398,47): warning C4251: “torch::autograd::profiler::TLSLegacyProfilerGuard::profilerDisableOptions_”:“std::optional<torch::autograd::profiler::ProfilerDisableOptions>”需要有 dll 接口以供“torch::autograd::profiler::TLSLegacyProfilerGuard”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::autograd::profiler::ProfilerDisableOptions>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(23,3): warning C4251: “torch::nn::BatchNormOptions::momentum_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::BatchNormOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(30,3): warning C4251: “torch::nn::EmbeddingOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::EmbeddingOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(33,3): warning C4251: “torch::nn::EmbeddingOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::EmbeddingOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(57,3): warning C4251: “torch::nn::EmbeddingFromPretrainedOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::EmbeddingFromPretrainedOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(60,3): warning C4251: “torch::nn::EmbeddingFromPretrainedOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::EmbeddingFromPretrainedOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(86,3): warning C4251: “torch::nn::functional::EmbeddingFuncOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::functional::EmbeddingFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(89,3): warning C4251: “torch::nn::functional::EmbeddingFuncOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::functional::EmbeddingFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(122,3): warning C4251: “torch::nn::EmbeddingBagOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::EmbeddingBagOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(133,3): warning C4251: “torch::nn::EmbeddingBagOptions::mode_”:“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”需要有 dll 接口以供“torch::nn::EmbeddingBagOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(150,3): warning C4251: “torch::nn::EmbeddingBagOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::EmbeddingBagOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(163,3): warning C4251: “torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::EmbeddingBagFromPretrainedOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(174,3): warning C4251: “torch::nn::EmbeddingBagFromPretrainedOptions::mode_”:“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”需要有 dll 接口以供“torch::nn::EmbeddingBagFromPretrainedOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(186,3): warning C4251: “torch::nn::EmbeddingBagFromPretrainedOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::EmbeddingBagFromPretrainedOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(207,3): warning C4251: “torch::nn::functional::EmbeddingBagFuncOptions::max_norm_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::functional::EmbeddingBagFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(218,3): warning C4251: “torch::nn::functional::EmbeddingBagFuncOptions::mode_”:“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”需要有 dll 接口以供“torch::nn::functional::EmbeddingBagFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(235,3): warning C4251: “torch::nn::functional::EmbeddingBagFuncOptions::padding_idx_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::nn::functional::EmbeddingBagFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,59): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,48): warning C4244: “参数”: 从“_Ty”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,48): warning C4244:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,48): warning C4244:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,48): warning C4244:             _Ty=double
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(50,48): warning C4244:         ]
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,59): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,48): warning C4244: “参数”: 从“_Ty”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,48): warning C4244:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,48): warning C4244:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,48): warning C4244:             _Ty=double
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(151,48): warning C4244:         ]
  (编译源文件“torch.cpp”)
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(24,3): warning C4251: “torch::nn::FoldOptions::output_size_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::FoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(27,3): warning C4251: “torch::nn::FoldOptions::kernel_size_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::FoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(31,3): warning C4251: “torch::nn::FoldOptions::dilation_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::FoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(35,3): warning C4251: “torch::nn::FoldOptions::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::FoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(38,3): warning C4251: “torch::nn::FoldOptions::stride_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::FoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(67,3): warning C4251: “torch::nn::UnfoldOptions::kernel_size_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::UnfoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(71,3): warning C4251: “torch::nn::UnfoldOptions::dilation_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::UnfoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(75,3): warning C4251: “torch::nn::UnfoldOptions::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::UnfoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(78,3): warning C4251: “torch::nn::UnfoldOptions::stride_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::UnfoldOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(106,3): warning C4251: “torch::nn::GELUOptions::approximate_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::nn::GELUOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(254,3): warning C4251: “torch::nn::functional::SoftmaxFuncOptions::dtype_”:“std::optional<c10::ScalarType>”需要有 dll 接口以供“torch::nn::functional::SoftmaxFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::ScalarType>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(295,3): warning C4251: “torch::nn::functional::SoftminFuncOptions::dtype_”:“std::optional<c10::ScalarType>”需要有 dll 接口以供“torch::nn::functional::SoftminFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::ScalarType>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(336,3): warning C4251: “torch::nn::functional::LogSoftmaxFuncOptions::dtype_”:“std::optional<c10::ScalarType>”需要有 dll 接口以供“torch::nn::functional::LogSoftmaxFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<c10::ScalarType>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(63,3): warning C4251: “torch::nn::UnflattenOptions::dimname_”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“torch::nn::UnflattenOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(65,3): warning C4251: “torch::nn::UnflattenOptions::sizes_”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::UnflattenOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(67,3): warning C4251: “torch::nn::UnflattenOptions::namedshape_”:“std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>”需要有 dll 接口以供“torch::nn::UnflattenOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(23,3): warning C4251: “torch::nn::L1LossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::L1LossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(67,3): warning C4251: “torch::nn::KLDivLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>”需要有 dll 接口以供“torch::nn::KLDivLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(104,3): warning C4251: “torch::nn::MSELossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::MSELossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(137,3): warning C4251: “torch::nn::BCELossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::BCELossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(172,3): warning C4251: “torch::nn::HingeEmbeddingLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::HingeEmbeddingLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(217,3): warning C4251: “torch::nn::MultiMarginLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::MultiMarginLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(252,3): warning C4251: “torch::nn::CosineEmbeddingLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::CosineEmbeddingLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(293,3): warning C4251: “torch::nn::MultiLabelMarginLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::MultiLabelMarginLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(334,3): warning C4251: “torch::nn::SoftMarginLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::SoftMarginLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(374,3): warning C4251: “torch::nn::MultiLabelSoftMarginLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::MultiLabelSoftMarginLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(416,3): warning C4251: “torch::nn::TripletMarginLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::TripletMarginLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(452,3): warning C4251: “torch::nn::TripletMarginWithDistanceLossOptions::distance_function_”:“std::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>”需要有 dll 接口以供“torch::nn::TripletMarginWithDistanceLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(466,3): warning C4251: “torch::nn::TripletMarginWithDistanceLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::TripletMarginWithDistanceLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(501,3): warning C4251: “torch::nn::CTCLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::CTCLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(546,3): warning C4251: “torch::nn::SmoothL1LossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::SmoothL1LossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(550,3): warning C4251: “torch::nn::SmoothL1LossOptions::beta_”:“std::optional<double>”需要有 dll 接口以供“torch::nn::SmoothL1LossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(590,3): warning C4251: “torch::nn::HuberLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::HuberLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(633,3): warning C4251: “torch::nn::PoissonNLLLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::PoissonNLLLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(667,3): warning C4251: “torch::nn::MarginRankingLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::MarginRankingLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(705,3): warning C4251: “torch::nn::NLLLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::NLLLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(743,3): warning C4251: “torch::nn::CrossEntropyLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::CrossEntropyLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(779,3): warning C4251: “torch::nn::BCEWithLogitsLossOptions::reduction_”:“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”需要有 dll 接口以供“torch::nn::BCEWithLogitsLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3): warning C4251: “torch::nn::ReflectionPadOptions<D>::padding_”:“torch::ExpandingArray<D*2,int64_t>”需要有 dll 接口以供“torch::nn::ReflectionPadOptions<D>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<D*2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(13,18):
          在编译类模板“torch::nn::ReflectionPadOptions”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3): warning C4251: “torch::nn::ReplicationPadOptions<D>::padding_”:“torch::ExpandingArray<D*2,int64_t>”需要有 dll 接口以供“torch::nn::ReplicationPadOptions<D>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<D*2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(55,18):
          在编译类模板“torch::nn::ReplicationPadOptions”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3): warning C4251: “torch::nn::ZeroPadOptions<D>::padding_”:“torch::ExpandingArray<D*2,int64_t>”需要有 dll 接口以供“torch::nn::ZeroPadOptions<D>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<D*2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(97,18):
          在编译类模板“torch::nn::ZeroPadOptions”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3): warning C4251: “torch::nn::ConstantPadOptions<D>::padding_”:“torch::ExpandingArray<D*2,int64_t>”需要有 dll 接口以供“torch::nn::ConstantPadOptions<D>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<D*2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(140,18):
          在编译类模板“torch::nn::ConstantPadOptions”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(206,3): warning C4251: “torch::nn::functional::PadFuncOptions::pad_”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::functional::PadFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(209,3): warning C4251: “torch::nn::functional::PadFuncOptions::mode_”:“std::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>”需要有 dll 接口以供“torch::nn::functional::PadFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(20,3): warning C4251: “torch::nn::LayerNormOptions::normalized_shape_”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::LayerNormOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(44,3): warning C4251: “torch::nn::functional::LayerNormFuncOptions::normalized_shape_”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::functional::LayerNormFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(135,3): warning C4251: “torch::nn::functional::NormalizeFuncOptions::out_”:“std::optional<at::Tensor>”需要有 dll 接口以供“torch::nn::functional::NormalizeFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<at::Tensor>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(22,3): warning C4251: “torch::nn::UpsampleOptions::size_”:“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”需要有 dll 接口以供“torch::nn::UpsampleOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(25,3): warning C4251: “torch::nn::UpsampleOptions::scale_factor_”:“std::optional<std::vector<T,std::allocator<T>>>”需要有 dll 接口以供“torch::nn::UpsampleOptions”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(25,3): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(25,3): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(25,3): warning C4251:             T=double
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(25,3): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<T,std::allocator<T>>>”的声明
          with
          [
              T=double
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36,3): warning C4251: “torch::nn::UpsampleOptions::mode_”:“std::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>”需要有 dll 接口以供“torch::nn::UpsampleOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42,3): warning C4251: “torch::nn::UpsampleOptions::align_corners_”:“std::optional<bool>”需要有 dll 接口以供“torch::nn::UpsampleOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67,3): warning C4251: “torch::nn::functional::InterpolateFuncOptions::size_”:“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”需要有 dll 接口以供“torch::nn::functional::InterpolateFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<int64_t,std::allocator<int64_t>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(70,3): warning C4251: “torch::nn::functional::InterpolateFuncOptions::scale_factor_”:“std::optional<std::vector<T,std::allocator<T>>>”需要有 dll 接口以供“torch::nn::functional::InterpolateFuncOptions”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(70,3): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(70,3): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(70,3): warning C4251:             T=double
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(70,3): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<T,std::allocator<T>>>”的声明
          with
          [
              T=double
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(74,3): warning C4251: “torch::nn::functional::InterpolateFuncOptions::mode_”:“std::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea,torch::enumtype::kNearestExact>”需要有 dll 接口以供“torch::nn::functional::InterpolateFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea,torch::enumtype::kNearestExact>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(85,3): warning C4251: “torch::nn::functional::InterpolateFuncOptions::align_corners_”:“std::optional<bool>”需要有 dll 接口以供“torch::nn::functional::InterpolateFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(97,3): warning C4251: “torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_”:“std::optional<bool>”需要有 dll 接口以供“torch::nn::functional::InterpolateFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(27,3): warning C4251: “torch::nn::functional::GridSampleFuncOptions::mode_”:“std::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest,torch::enumtype::kBicubic>”需要有 dll 接口以供“torch::nn::functional::GridSampleFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest,torch::enumtype::kBicubic>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(29,3): warning C4251: “torch::nn::functional::GridSampleFuncOptions::padding_mode_”:“std::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>”需要有 dll 接口以供“torch::nn::functional::GridSampleFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(31,3): warning C4251: “torch::nn::functional::GridSampleFuncOptions::align_corners_”:“std::optional<bool>”需要有 dll 接口以供“torch::nn::functional::GridSampleFuncOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<bool>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(92,12): warning C4251: “torch::nn::FunctionalImpl::function_”:“std::function<at::Tensor (at::Tensor)>”需要有 dll 接口以供“torch::nn::FunctionalImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\functional(1083,7):
      参见“std::function<at::Tensor (at::Tensor)>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(859,10): warning C4251: “torch::nn::MultiheadAttentionImpl::out_proj”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::MultiheadAttentionImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\adaptive.h(29,3): warning C4251: “torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveLogSoftmaxWithLossOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(86,24): warning C4251: “torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveLogSoftmaxWithLossImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(96,10): warning C4251: “torch::nn::AdaptiveLogSoftmaxWithLossImpl::head”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::AdaptiveLogSoftmaxWithLossImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(98,14): warning C4251: “torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail”:“torch::nn::ModuleList”需要有 dll 接口以供“torch::nn::AdaptiveLogSoftmaxWithLossImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(270,1):
      参见“torch::nn::ModuleList”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(179,37): warning C4251: “torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options”:“torch::nn::detail::ConvNdOptions<1>”需要有 dll 接口以供“torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<1>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(179,37): warning C4251: “torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(211,37): warning C4251: “torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options”:“torch::nn::detail::ConvNdOptions<2>”需要有 dll 接口以供“torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<2>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(211,37): warning C4251: “torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(246,37): warning C4251: “torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options”:“torch::nn::detail::ConvNdOptions<3>”需要有 dll 接口以供“torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<3>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(246,37): warning C4251: “torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251: “torch::nn::ConvNdImpl<1,Derived>::options”:“torch::nn::detail::ConvNdOptions<1>”需要有 dll 接口以供“torch::nn::ConvNdImpl<1,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:             Derived=torch::nn::ConvTranspose1dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<1>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251: “torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<1,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:             Derived=torch::nn::ConvTranspose1dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251: “torch::nn::ConvNdImpl<2,Derived>::options”:“torch::nn::detail::ConvNdOptions<2>”需要有 dll 接口以供“torch::nn::ConvNdImpl<2,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:             Derived=torch::nn::ConvTranspose2dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<2>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251: “torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<2,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:             Derived=torch::nn::ConvTranspose2dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251: “torch::nn::ConvNdImpl<3,Derived>::options”:“torch::nn::detail::ConvNdOptions<3>”需要有 dll 接口以供“torch::nn::ConvNdImpl<3,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:             Derived=torch::nn::ConvTranspose3dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\conv.h(26,8):
      参见“torch::nn::detail::ConvNdOptions<3>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251: “torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice”:“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口以供“torch::nn::ConvNdImpl<3,Derived>”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:             Derived=torch::nn::ConvTranspose3dImpl
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,14): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3): warning C4251: “torch::nn::ReflectionPadOptions<1>::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::ReflectionPadOptions<1>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(45,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(27,27):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadOptions<1>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3): warning C4251: “torch::nn::ReflectionPadOptions<2>::padding_”:“torch::ExpandingArray<4,int64_t>”需要有 dll 接口以供“torch::nn::ReflectionPadOptions<2>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<4,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(72,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(27,27):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadOptions<2>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3): warning C4251: “torch::nn::ReflectionPadOptions<3>::padding_”:“torch::ExpandingArray<6,int64_t>”需要有 dll 接口以供“torch::nn::ReflectionPadOptions<3>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<6,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(24,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(100,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadImpl<3,torch::nn::ReflectionPad3dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(27,27):
          查看对正在编译的 类 模板 实例化“torch::nn::ReflectionPadOptions<3>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3): warning C4251: “torch::nn::ReplicationPadOptions<1>::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::ReplicationPadOptions<1>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(148,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(130,28):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadOptions<1>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3): warning C4251: “torch::nn::ReplicationPadOptions<2>::padding_”:“torch::ExpandingArray<4,int64_t>”需要有 dll 接口以供“torch::nn::ReplicationPadOptions<2>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<4,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(175,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(130,28):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadOptions<2>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3): warning C4251: “torch::nn::ReplicationPadOptions<3>::padding_”:“torch::ExpandingArray<6,int64_t>”需要有 dll 接口以供“torch::nn::ReplicationPadOptions<3>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<6,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(67,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(202,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(130,28):
          查看对正在编译的 类 模板 实例化“torch::nn::ReplicationPadOptions<3>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3): warning C4251: “torch::nn::ZeroPadOptions<1>::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::ZeroPadOptions<1>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(237,40):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadImpl<1,torch::nn::ZeroPad1dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232,21):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadOptions<1>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3): warning C4251: “torch::nn::ZeroPadOptions<2>::padding_”:“torch::ExpandingArray<4,int64_t>”需要有 dll 接口以供“torch::nn::ZeroPadOptions<2>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<4,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(251,40):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadImpl<2,torch::nn::ZeroPad2dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232,21):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadOptions<2>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3): warning C4251: “torch::nn::ZeroPadOptions<3>::padding_”:“torch::ExpandingArray<6,int64_t>”需要有 dll 接口以供“torch::nn::ZeroPadOptions<3>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<6,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(109,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(265,40):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadImpl<3,torch::nn::ZeroPad3dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232,21):
          查看对正在编译的 类 模板 实例化“torch::nn::ZeroPadOptions<3>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3): warning C4251: “torch::nn::ConstantPadOptions<1>::padding_”:“torch::ExpandingArray<2,int64_t>”需要有 dll 接口以供“torch::nn::ConstantPadOptions<1>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<2,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(312,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(295,25):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadOptions<1>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3): warning C4251: “torch::nn::ConstantPadOptions<2>::padding_”:“torch::ExpandingArray<4,int64_t>”需要有 dll 接口以供“torch::nn::ConstantPadOptions<2>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<4,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(338,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(295,25):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadOptions<2>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3): warning C4251: “torch::nn::ConstantPadOptions<3>::padding_”:“torch::ExpandingArray<6,int64_t>”需要有 dll 接口以供“torch::nn::ConstantPadOptions<3>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\expanding_array.h(24,7):
      参见“torch::ExpandingArray<6,int64_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153,3):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(364,14):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>”的引用
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(295,25):
          查看对正在编译的 类 模板 实例化“torch::nn::ConstantPadOptions<3>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21): warning C4251: “torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options”:“torch::nn::AvgPoolOptions<1>”需要有 dll 接口以供“torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(12,8):
      参见“torch::nn::AvgPoolOptions<1>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(43,40):
          查看对正在编译的 类 模板 实例化“torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21): warning C4251: “torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options”:“torch::nn::AvgPoolOptions<2>”需要有 dll 接口以供“torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(12,8):
      参见“torch::nn::AvgPoolOptions<2>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(69,40):
          查看对正在编译的 类 模板 实例化“torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21): warning C4251: “torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options”:“torch::nn::AvgPoolOptions<3>”需要有 dll 接口以供“torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(12,8):
      参见“torch::nn::AvgPoolOptions<3>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(27,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(95,40):
          查看对正在编译的 类 模板 实例化“torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21): warning C4251: “torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options”:“torch::nn::MaxPoolOptions<1>”需要有 dll 接口以供“torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(107,8):
      参见“torch::nn::MaxPoolOptions<1>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(140,40):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21): warning C4251: “torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options”:“torch::nn::MaxPoolOptions<2>”需要有 dll 接口以供“torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(107,8):
      参见“torch::nn::MaxPoolOptions<2>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(170,40):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21): warning C4251: “torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options”:“torch::nn::MaxPoolOptions<3>”需要有 dll 接口以供“torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(107,8):
      参见“torch::nn::MaxPoolOptions<3>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(124,21):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(200,40):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41): warning C4251: “torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options”:“torch::nn::AdaptiveMaxPoolOptions<output_size_t>”需要有 dll 接口以供“torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(191,8):
      参见“torch::nn::AdaptiveMaxPoolOptions<output_size_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(221,17):
          在编译类模板“torch::nn::AdaptiveMaxPoolImpl”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41): warning C4251: “torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options”:“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(191,8):
      参见“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(257,14):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41): warning C4251: “torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options”:“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(191,8):
      参见“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(289,48):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41): warning C4251: “torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options”:“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(191,8):
      参见“torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(240,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(326,48):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41): warning C4251: “torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options”:“torch::nn::AdaptiveAvgPoolOptions<output_size_t>”需要有 dll 接口以供“torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(265,8):
      参见“torch::nn::AdaptiveAvgPoolOptions<output_size_t>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(354,17):
          在编译类模板“torch::nn::AdaptiveAvgPoolImpl”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41): warning C4251: “torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options”:“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(265,8):
      参见“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(390,14):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41): warning C4251: “torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options”:“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(265,8):
      参见“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(418,48):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41): warning C4251: “torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options”:“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>”需要有 dll 接口以供“torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(265,8):
      参见“torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(373,41):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(451,48):
          查看对正在编译的 类 模板 实例化“torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23): warning C4251: “torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options”:“torch::nn::MaxUnpoolOptions<1>”需要有 dll 接口以供“torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(345,8):
      参见“torch::nn::MaxUnpoolOptions<1>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(503,42):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23): warning C4251: “torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options”:“torch::nn::MaxUnpoolOptions<2>”需要有 dll 接口以供“torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(345,8):
      参见“torch::nn::MaxUnpoolOptions<2>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(535,42):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23): warning C4251: “torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options”:“torch::nn::MaxUnpoolOptions<3>”需要有 dll 接口以供“torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(345,8):
      参见“torch::nn::MaxUnpoolOptions<3>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(487,23):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(567,42):
          查看对正在编译的 类 模板 实例化“torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(619,30): warning C4251: “torch::nn::FractionalMaxPool2dImpl::options”:“torch::nn::FractionalMaxPoolOptions<2>”需要有 dll 接口以供“torch::nn::FractionalMaxPool2dImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(444,8):
      参见“torch::nn::FractionalMaxPoolOptions<2>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(664,30): warning C4251: “torch::nn::FractionalMaxPool3dImpl::options”:“torch::nn::FractionalMaxPoolOptions<3>”需要有 dll 接口以供“torch::nn::FractionalMaxPool3dImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(444,8):
      参见“torch::nn::FractionalMaxPoolOptions<3>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20): warning C4251: “torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options”:“torch::nn::LPPoolOptions<1>”需要有 dll 接口以供“torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(508,8):
      参见“torch::nn::LPPoolOptions<1>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(707,39):
          查看对正在编译的 类 模板 实例化“torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20): warning C4251: “torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options”:“torch::nn::LPPoolOptions<2>”需要有 dll 接口以供“torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(508,8):
      参见“torch::nn::LPPoolOptions<2>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(735,39):
          查看对正在编译的 类 模板 实例化“torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20): warning C4251: “torch::nn::LPPoolImpl<3,torch::nn::LPPool3dImpl>::options”:“torch::nn::LPPoolOptions<3>”需要有 dll 接口以供“torch::nn::LPPoolImpl<3,torch::nn::LPPool3dImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(508,8):
      参见“torch::nn::LPPoolOptions<3>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(691,20):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(763,39):
          查看对正在编译的 类 模板 实例化“torch::nn::LPPoolImpl<3,torch::nn::LPPool3dImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(26,3): warning C4251: “torch::nn::detail::RNNOptionsBase::mode_”:“std::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>”需要有 dll 接口以供“torch::nn::detail::RNNOptionsBase”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(74,3): warning C4251: “torch::nn::RNNOptions::nonlinearity_”:“std::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>”需要有 dll 接口以供“torch::nn::RNNOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(195,3): warning C4251: “torch::nn::RNNCellOptions::nonlinearity_”:“std::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>”需要有 dll 接口以供“torch::nn::RNNCellOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28): warning C4251: “torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<Derived>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(24,17):
          在编译类模板“torch::nn::detail::RNNImplBase”时
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(84,41): warning C4251: “torch::nn::detail::RNNImplBase<Derived>::all_weights_”:“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<Derived>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(86,23): warning C4251: “torch::nn::detail::RNNImplBase<Derived>::flat_weights_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<Derived>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(104,42):
          查看对正在编译的 类 模板 实例化“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(84,41): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_”:“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(86,23): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(153,43):
          查看对正在编译的 类 模板 实例化“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(84,41): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_”:“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(86,23): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_”:“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::string,std::allocator<std::string>>”的声明
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,28):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(218,42):
          查看对正在编译的 类 模板 实例化“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的引用
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(84,41): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_”:“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(86,23): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(38,3): warning C4251: “torch::nn::TransformerEncoderLayerOptions::activation_”:“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67,3): warning C4251: “torch::nn::TransformerDecoderLayerOptions::activation_”:“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(53,3): warning C4251: “torch::nn::TransformerOptions::activation_”:“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”需要有 dll 接口以供“torch::nn::TransformerOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\variant(923,7):
      参见“std::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(56,3): warning C4251: “torch::nn::TransformerOptions::custom_encoder_”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(59,3): warning C4251: “torch::nn::TransformerOptions::custom_decoder_”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(127,13): warning C4251: “torch::nn::TransformerImpl::encoder”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(130,13): warning C4251: “torch::nn::TransformerImpl::decoder”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(60,22): warning C4251: “torch::nn::TransformerEncoderLayerImpl::self_attn”:“torch::nn::MultiheadAttention”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(871,1):
      参见“torch::nn::MultiheadAttention”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(63,10): warning C4251: “torch::nn::TransformerEncoderLayerImpl::linear1”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(66,11): warning C4251: “torch::nn::TransformerEncoderLayerImpl::dropout”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(69,10): warning C4251: “torch::nn::TransformerEncoderLayerImpl::linear2”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(72,13): warning C4251: “torch::nn::TransformerEncoderLayerImpl::norm1”:“torch::nn::LayerNorm”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73,1):
      参见“torch::nn::LayerNorm”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(74,13): warning C4251: “torch::nn::TransformerEncoderLayerImpl::norm2”:“torch::nn::LayerNorm”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73,1):
      参见“torch::nn::LayerNorm”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(77,11): warning C4251: “torch::nn::TransformerEncoderLayerImpl::dropout1”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(79,11): warning C4251: “torch::nn::TransformerEncoderLayerImpl::dropout2”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerEncoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(143,22): warning C4251: “torch::nn::TransformerDecoderLayerImpl::self_attn”:“torch::nn::MultiheadAttention”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(871,1):
      参见“torch::nn::MultiheadAttention”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(146,11): warning C4251: “torch::nn::TransformerDecoderLayerImpl::dropout1”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(149,13): warning C4251: “torch::nn::TransformerDecoderLayerImpl::norm1”:“torch::nn::LayerNorm”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73,1):
      参见“torch::nn::LayerNorm”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(152,22): warning C4251: “torch::nn::TransformerDecoderLayerImpl::multihead_attn”:“torch::nn::MultiheadAttention”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(871,1):
      参见“torch::nn::MultiheadAttention”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(155,11): warning C4251: “torch::nn::TransformerDecoderLayerImpl::dropout2”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(158,13): warning C4251: “torch::nn::TransformerDecoderLayerImpl::norm2”:“torch::nn::LayerNorm”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73,1):
      参见“torch::nn::LayerNorm”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(161,10): warning C4251: “torch::nn::TransformerDecoderLayerImpl::linear1”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(164,11): warning C4251: “torch::nn::TransformerDecoderLayerImpl::dropout”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(167,10): warning C4251: “torch::nn::TransformerDecoderLayerImpl::linear2”:“torch::nn::Linear”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83,1):
      参见“torch::nn::Linear”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(170,11): warning C4251: “torch::nn::TransformerDecoderLayerImpl::dropout3”:“torch::nn::Dropout”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(64,1):
      参见“torch::nn::Dropout”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(173,13): warning C4251: “torch::nn::TransformerDecoderLayerImpl::norm3”:“torch::nn::LayerNorm”需要有 dll 接口以供“torch::nn::TransformerDecoderLayerImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73,1):
      参见“torch::nn::LayerNorm”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34,3): warning C4251: “torch::nn::TransformerEncoderOptions::encoder_layer_”:“torch::nn::TransformerEncoderLayer”需要有 dll 接口以供“torch::nn::TransformerEncoderOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87,1):
      参见“torch::nn::TransformerEncoderLayer”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(40,3): warning C4251: “torch::nn::TransformerEncoderOptions::norm_”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerEncoderOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(65,3): warning C4251: “torch::nn::TransformerDecoderOptions::decoder_layer_”:“torch::nn::TransformerDecoderLayer”需要有 dll 接口以供“torch::nn::TransformerDecoderOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(191,1):
      参见“torch::nn::TransformerDecoderLayer”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(71,3): warning C4251: “torch::nn::TransformerDecoderOptions::norm_”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerDecoderOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(62,14): warning C4251: “torch::nn::TransformerEncoderImpl::layers”:“torch::nn::ModuleList”需要有 dll 接口以供“torch::nn::TransformerEncoderImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(270,1):
      参见“torch::nn::ModuleList”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(65,13): warning C4251: “torch::nn::TransformerEncoderImpl::norm”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerEncoderImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(131,14): warning C4251: “torch::nn::TransformerDecoderImpl::layers”:“torch::nn::ModuleList”需要有 dll 接口以供“torch::nn::TransformerDecoderImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(270,1):
      参见“torch::nn::ModuleList”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(134,13): warning C4251: “torch::nn::TransformerDecoderImpl::norm”:“torch::nn::AnyModule”需要有 dll 接口以供“torch::nn::TransformerDecoderImpl”的客户端使用
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(99,7):
      参见“torch::nn::AnyModule”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(109,23): warning C4251: “torch::optim::OptimizerParamGroup::params_”:“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::optim::OptimizerParamGroup”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(110,37): warning C4251: “torch::optim::OptimizerParamGroup::options_”:“std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>”需要有 dll 接口以供“torch::optim::OptimizerParamGroup”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(190,36): warning C4251: “torch::optim::Optimizer::param_groups_”:“std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>”需要有 dll 接口以供“torch::optim::Optimizer”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251: “torch::optim::Optimizer::state_”:“ska::flat_hash_map<void *,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<void *>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”需要有 dll 接口以供“torch::optim::Optimizer”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251:             K=void *,
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251:             V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(191,67): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\flat_hash_map.h(1920,7):
      参见“ska::flat_hash_map<void *,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<void *>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”的声明
          with
          [
              K=void *,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(192,37): warning C4251: “torch::optim::Optimizer::defaults_”:“std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>”需要有 dll 接口以供“torch::optim::Optimizer”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(21,3): warning C4251: “torch::optim::AdamOptions::betas_”:“std::tuple<double,double>”需要有 dll 接口以供“torch::optim::AdamOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\tuple(294,7):
      参见“std::tuple<double,double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\adamw.h(21,3): warning C4251: “torch::optim::AdamWOptions::betas_”:“std::tuple<double,double>”需要有 dll 接口以供“torch::optim::AdamWOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\tuple(294,7):
      参见“std::tuple<double,double>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(20,3): warning C4251: “torch::optim::LBFGSOptions::max_eval_”:“std::optional<int64_t>”需要有 dll 接口以供“torch::optim::LBFGSOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(24,3): warning C4251: “torch::optim::LBFGSOptions::line_search_fn_”:“std::optional<std::string>”需要有 dll 接口以供“torch::optim::LBFGSOptions”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::string>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(45,3): warning C4251: “torch::optim::LBFGSParamState::old_dirs_”:“std::deque<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::optim::LBFGSParamState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\deque(588,7):
      参见“std::deque<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(46,3): warning C4251: “torch::optim::LBFGSParamState::old_stps_”:“std::deque<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::optim::LBFGSParamState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\deque(588,7):
      参见“std::deque<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(47,3): warning C4251: “torch::optim::LBFGSParamState::ro_”:“std::deque<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口以供“torch::optim::LBFGSParamState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\deque(588,7):
      参见“std::deque<at::Tensor,std::allocator<at::Tensor>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(48,3): warning C4251: “torch::optim::LBFGSParamState::al_”:“std::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>”需要有 dll 接口以供“torch::optim::LBFGSParamState”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(83,26): warning C4251: “torch::optim::LBFGS::_numel_cache”:“std::optional<int64_t>”需要有 dll 接口以供“torch::optim::LBFGS”的客户端使用
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(213,7):
      参见“std::optional<int64_t>”的声明
  
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\schedulers\reduce_on_plateau_scheduler.h(52,22): warning C4251: “torch::optim::ReduceLROnPlateauScheduler::min_lrs”:“std::vector<T,std::allocator<T>>”需要有 dll 接口以供“torch::optim::ReduceLROnPlateauScheduler”的客户端使用
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\schedulers\reduce_on_plateau_scheduler.h(52,22): warning C4251:         with
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\schedulers\reduce_on_plateau_scheduler.h(52,22): warning C4251:         [
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\schedulers\reduce_on_plateau_scheduler.h(52,22): warning C4251:             T=float
D:\libtorch\libtorch\include\torch\csrc\api\include\torch\optim\schedulers\reduce_on_plateau_scheduler.h(52,22): warning C4251:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=float
          ]
  
E:\code-learning\libtorch\Solution1\torch\torch.cpp(42,67): warning C4305: “参数”: 从“double”到“_Ty”截断
E:\code-learning\libtorch\Solution1\torch\torch.cpp(42,67): warning C4305:         with
E:\code-learning\libtorch\Solution1\torch\torch.cpp(42,67): warning C4305:         [
E:\code-learning\libtorch\Solution1\torch\torch.cpp(42,67): warning C4305:             _Ty=float
E:\code-learning\libtorch\Solution1\torch\torch.cpp(42,67): warning C4305:         ]
E:\code-learning\libtorch\Solution1\torch\torch.cpp(55,33): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
E:\code-learning\libtorch\Solution1\torch\torch.cpp(74,67): warning C4305: “参数”: 从“double”到“_Ty”截断
E:\code-learning\libtorch\Solution1\torch\torch.cpp(74,67): warning C4305:         with
E:\code-learning\libtorch\Solution1\torch\torch.cpp(74,67): warning C4305:         [
E:\code-learning\libtorch\Solution1\torch\torch.cpp(74,67): warning C4305:             _Ty=float
E:\code-learning\libtorch\Solution1\torch\torch.cpp(74,67): warning C4305:         ]
E:\code-learning\libtorch\Solution1\torch\torch.cpp(76,29): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
E:\code-learning\libtorch\Solution1\torch\torch.cpp(182,24): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
E:\code-learning\libtorch\Solution1\torch\torch.cpp(248,24): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
E:\code-learning\libtorch\Solution1\torch\torch.cpp(249,21): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
E:\code-learning\libtorch\Solution1\torch\torch.cpp(394,36): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12): warning C4267: “=”: 从“size_t”转换到“Size_T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12): warning C4267:         with
D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12): warning C4267:         [
D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12): warning C4267:             Size_T=unsigned int
D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(99,12):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\SymIntArrayRef.h(52,23):
          查看对正在编译的 类 模板 实例化“c10::SmallVector<int64_t,5>”的引用
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,49):
          查看对正在编译的 类 模板 实例化“c10::SmallVectorImpl<T>”的引用
          with
          [
              T=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(632,32):
          查看对正在编译的 类 模板 实例化“c10::SmallVectorTemplateBase<T,true>”的引用
          with
          [
              T=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(526,49):
          查看对正在编译的 类 模板 实例化“c10::SmallVectorTemplateCommon<T,void>”的引用
          with
          [
              T=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(122,14):
          查看对正在编译的 类 模板 实例化“c10::SmallVectorBase<unsigned int>”的引用
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(97,8):
          在编译 类 模板 成员函数“void c10::SmallVectorBase<unsigned int>::set_size(size_t)”时
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(621,19):
              请参阅 "c10::SmallVectorTemplateBase<T,true>::push_back" 中对 "c10::SmallVectorBase<unsigned int>::set_size" 的第一个引用
          with
          [
              T=uint64_t
          ]
              D:\libtorch\libtorch\include\torch\csrc\autograd\forward_grad.h(145,29):
              请参阅 "torch::autograd::ForwardGrad::clear" 中对 "c10::SmallVectorTemplateBase<T,true>::push_back" 的第一个引用
          with
          [
              T=uint64_t
          ]
  
D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34): warning C4267: “初始化”: 从“size_t”转换到“Size_T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34): warning C4267:         with
D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34): warning C4267:         [
D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34): warning C4267:             Size_T=unsigned int
D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(63,34):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(62,3):
          在编译 类 模板 成员函数“c10::SmallVectorBase<unsigned int>::SmallVectorBase(void *,size_t)”时
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(136,48):
              请参阅 "c10::SmallVectorTemplateCommon<T,void>::SmallVectorTemplateCommon" 中对 "c10::SmallVectorBase<unsigned int>::SmallVectorBase" 的第一个引用
          with
          [
              T=at::OperandInfo
          ]
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(383,70):
              请参阅 "c10::SmallVectorTemplateBase<T,false>::SmallVectorTemplateBase" 中对 "c10::SmallVectorTemplateCommon<T,void>::SmallVectorTemplateCommon" 的第一个引用
          with
          [
              T=at::OperandInfo
          ]
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(646,68):
              请参阅 "c10::SmallVectorImpl<T>::SmallVectorImpl" 中对 "c10::SmallVectorTemplateBase<T,false>::SmallVectorTemplateBase" 的第一个引用
          with
          [
              T=at::OperandInfo
          ]
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(1334,27):
              请参阅 "c10::SmallVector<at::OperandInfo,4>::SmallVector" 中对 "c10::SmallVectorImpl<T>::SmallVectorImpl" 的第一个引用
          with
          [
              T=at::OperandInfo
          ]
              D:\libtorch\libtorch\include\ATen\TensorIterator.h(734,1):
              请参阅 "at::TensorIteratorBase::TensorIteratorBase" 中对 "c10::SmallVector<at::OperandInfo,4>::SmallVector" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244: “初始化”: 从“const T”转换到“T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:             T=double
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:             T=float
D:\libtorch\libtorch\include\c10\util\complex.h(173,14): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\complex.h(173,14):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(185,9):
          查看对正在编译的函数 模板 实例化“c10::complex<float>::complex<T>(const c10::complex<double> &)”的引用
          with
          [
              T=float
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(184,5):
              请参阅 "c10::static_cast_with_inter_type<c10::complex<c10::Half>,c10::complex<double>>::apply" 中对 "c10::complex<float>::complex" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244: “初始化”: 从“const T”转换到“T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:             T=double
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:             T=float
D:\libtorch\libtorch\include\c10\util\complex.h(173,34): warning C4244:         ]
  (编译源文件“torch.cpp”)
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244: “初始化”: 从“_Ty”转换到“_Ty2”，可能丢失数据
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         with
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:             _Ty=int
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         ]
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         and
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:             _Ty2=float
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54):
      模板实例化上下文(最早的实例化上下文)为
          E:\code-learning\libtorch\Solution1\torch\torch.cpp(387,13):
          查看对正在编译的函数 模板 实例化“std::pair<const std::string,float>::pair<const char(&)[7],int,0>(_Other1,_Other2 &&) noexcept(false)”的引用
          with
          [
              _Other1=const char (&)[7],
              _Other2=int
          ]
              E:\code-learning\libtorch\Solution1\torch\torch.cpp(386,66):
              请参阅 "train_model" 中对 "std::pair<const std::string,float>::pair" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=uint64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Float8_e8m0fnu,uint64_t>(From,const char *)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::Float8_e8m0fnu,uint64_t>(From)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,uint64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,uint64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::Float8_e8m0fnu,
              src_t=uint64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,uint64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=int64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Float8_e8m0fnu,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::Float8_e8m0fnu,int64_t>(From)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,int64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,int64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::Float8_e8m0fnu,
              src_t=int64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,int64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“T”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=double
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Float8_e8m0fnu,c10::complex<double>>(From,const char *)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=c10::complex<double>
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::Float8_e8m0fnu,c10::complex<double>>(From)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=c10::complex<double>
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,c10::complex<double>>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,c10::complex<double>>::apply(src_t)”时
          with
          [
              dest_t=c10::Float8_e8m0fnu,
              src_t=c10::complex<double>
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,c10::complex<double>>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“float”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=double
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Float8_e8m0fnu,double>(From,const char *)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=double
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::Float8_e8m0fnu,double>(From)”的引用
          with
          [
              To=c10::Float8_e8m0fnu,
              From=double
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,double>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,double>::apply(src_t)”时
          with
          [
              dest_t=c10::Float8_e8m0fnu,
              src_t=double
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::Float8_e8m0fnu,double>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=uint64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=double
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<double>,uint64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<double>,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::complex<double>,uint64_t>(From)”的引用
          with
          [
              To=c10::complex<double>,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::complex<double>,uint64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,uint64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<double>,
              src_t=uint64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::complex<double>,uint64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=int64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=double
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::complex<double>,int64_t>(From)”的引用
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::complex<double>,int64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,int64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<double>,
              src_t=int64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::complex<double>,int64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=uint64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=float
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,uint64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::complex<float>,uint64_t>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=uint64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::complex<float>,uint64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,uint64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              src_t=uint64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::complex<float>,uint64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=int64_t
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=float
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::complex<float>,int64_t>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::complex<float>,int64_t>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,int64_t>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              src_t=int64_t
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::complex<float>,int64_t>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         with
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             src_t=double
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         and
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         [
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:             T=float
D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32): warning C4244:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\TypeCast.h(70,32):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\Scalar.h(140,3):
          查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,double>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=double
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
          查看对正在编译的函数 模板 实例化“To c10::convert<c10::complex<float>,double>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=double
          ]
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,49):
          查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<c10::complex<float>,double>”的引用
          D:\libtorch\libtorch\include\c10\util\TypeCast.h(66,67):
          在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,double>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              src_t=double
          ]
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(191,3):
              请参阅 "c10::convert" 中对 "c10::static_cast_with_inter_type<c10::complex<float>,double>::apply" 的第一个引用
              D:\libtorch\libtorch\include\c10\util\TypeCast.h(203,10):
              请参阅 "c10::checked_convert" 中对 "c10::convert" 的第一个引用
  
D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20): warning C4267: “=”: 从“size_t”转换到“Size_T”，可能丢失数据
D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20): warning C4267:         with
D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20): warning C4267:         [
D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20): warning C4267:             Size_T=unsigned int
D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\libtorch\libtorch\include\c10\util\SmallVector.h(518,20):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\c10\core\SymbolicShapeMeta.h(18,16):
          查看对正在编译的 类 模板 实例化“c10::SmallVector<c10::SymInt,5>”的引用
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(1274,49):
          查看对正在编译的 类 模板 实例化“c10::SmallVectorImpl<T>”的引用
          with
          [
              T=c10::SymInt
          ]
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(1120,40):
          在编译 类 模板 成员函数“c10::SmallVectorImpl<T> &c10::SmallVectorImpl<T>::operator =(c10::SmallVectorImpl<T> &&) noexcept”时
          with
          [
              T=c10::SymInt
          ]
              D:\libtorch\libtorch\include\c10\util\SmallVector.h(1369,34):
              请参阅 "c10::SmallVector<c10::SymInt,5>::operator =" 中对 "c10::SmallVectorImpl<T>::operator =" 的第一个引用
          with
          [
              T=c10::SymInt
          ]
              D:\libtorch\libtorch\include\ATen\ExpandUtils.h(431,13):
              请参阅 "at::expand_outplace" 中对 "c10::SmallVector<c10::SymInt,5>::operator =" 的第一个引用
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(490,74):
          在编译 类 模板 成员函数“void c10::SmallVectorTemplateBase<T,false>::grow(size_t)”时
          with
          [
              T=c10::SymInt
          ]
          D:\libtorch\libtorch\include\c10\util\SmallVector.h(512,25):
          在编译 类 模板 成员函数“void c10::SmallVectorTemplateBase<T,false>::takeAllocationForGrow(T *,size_t)”时
          with
          [
              T=c10::SymInt
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(82,17): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(82,17):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\ATen\core\function_schema.h(438,9):
          查看对正在编译的函数 模板 实例化“std::optional<int32_t>::optional<const I,0>(_Ty2 &&) noexcept”的引用
          with
          [
              I=size_t,
              _Ty2=size_t
          ]
              D:\libtorch\libtorch\include\ATen\core\function_schema.h(438,9):
              请参阅 "c10::FunctionSchema::argumentIndexWithName" 中对 "std::optional<int32_t>::optional" 的第一个引用
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\optional(258,18):
          查看对正在编译的函数 模板 实例化“std::_Optional_construct_base<_Ty>::_Optional_construct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&)”的引用
          with
          [
              _Ty=int32_t
          ]
          E:\code-learning\libtorch\Solution1\torch\torch.cpp(495,1):
          查看对正在编译的函数 模板 实例化“std::_Optional_destruct_base<_Ty,true>::_Optional_destruct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&) noexcept”的引用
          with
          [
              _Ty=int32_t
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility(506,61): warning C4267: “初始化”: 从“size_t”转换到“unsigned int”，可能丢失数据
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility(506,61):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(236,23):
          查看对正在编译的函数 模板 实例化“unsigned int &std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back<const _Ty&>(const _Ty &)”的引用
          with
          [
              _Ty=size_t
          ]
              D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(236,35):
              请参阅 "torch::dynamo::autograd::TensorArgs::lookup" 中对 "std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back" 的第一个引用
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(909,24):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<const unsigned __int64&>(const unsigned __int64 &)”的引用
          with
          [
              _Ty=std::_Vbase
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(830,20):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<const unsigned __int64&>(const unsigned __int64 &)”的引用
          with
          [
              _Ty=std::_Vbase
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(845,18):
          查看对正在编译的函数 模板 实例化“void std::_Construct_in_place<unsigned int,const _Ty&>(unsigned int &,const _Ty &) noexcept”的引用
          with
          [
              _Ty=size_t
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267: “初始化”: 从“size_t”转换到“_Ty”，可能丢失数据
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         with
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:             _Ty=unsigned int
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82):
      模板实例化上下文(最早的实例化上下文)为
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(833,17):
          查看对正在编译的函数 模板 实例化“unsigned int *std::vector<std::_Vbase,std::allocator<std::_Vbase>>::_Emplace_reallocate<const _Ty&>(unsigned int *const ,const _Ty &)”的引用
          with
          [
              _Ty=size_t
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(885,23):
          查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const unsigned __int64&>(_Alloc &,_Objty *const ,const unsigned __int64 &)”的引用
          with
          [
              _Alloc=std::allocator<std::_Vbase>,
              _Ty=unsigned int,
              _Objty=unsigned int
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility(506,61): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility(506,61):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(681,26):
          查看对正在编译的函数 模板 实例化“int &std::vector<int32_t,std::allocator<int>>::emplace_back<size_t&>(size_t &)”的引用
              D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(681,38):
              请参阅 "torch::dynamo::autograd::CompiledNodeArgs::add_pre_hook" 中对 "std::vector<int32_t,std::allocator<int>>::emplace_back" 的第一个引用
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(909,24):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&>(size_t &)”的引用
          with
          [
              _Ty=int32_t
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(830,20):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&>(size_t &)”的引用
          with
          [
              _Ty=int32_t
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(845,18):
          查看对正在编译的函数 模板 实例化“void std::_Construct_in_place<int,size_t&>(_Ty &,size_t &) noexcept”的引用
          with
          [
              _Ty=int
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267: “初始化”: 从“size_t”转换到“_Ty”，可能丢失数据
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         with
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:             _Ty=int
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82):
      模板实例化上下文(最早的实例化上下文)为
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(833,17):
          查看对正在编译的函数 模板 实例化“int *std::vector<int32_t,std::allocator<int>>::_Emplace_reallocate<size_t&>(int *const ,size_t &)”的引用
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(885,23):
          查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,size_t&>(_Alloc &,_Objty *const ,size_t &)”的引用
          with
          [
              _Alloc=std::allocator<int>,
              _Ty=int,
              _Objty=int
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16): warning C4267: “初始化”: 从“size_t”转换到“_Ty1”，可能丢失数据
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16): warning C4267:         with
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16): warning C4267:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16): warning C4267:             _Ty1=int
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16): warning C4267:         ]
  (编译源文件“torch.cpp”)
      D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,16):
      模板实例化上下文(最早的实例化上下文)为
          D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(658,33):
          查看对正在编译的函数 模板 实例化“std::pair<int,int> &std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back<size_t&,int&>(size_t &,int &)”的引用
              D:\libtorch\libtorch\include\torch\csrc\dynamo\compiled_autograd.h(658,45):
              请参阅 "torch::dynamo::autograd::CompiledNodeArgs::add_tensor_pre_hook" 中对 "std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back" 的第一个引用
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(909,24):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&,int&>(size_t &,int &)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(830,20):
          查看对正在编译的函数 模板 实例化“_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&,int&>(size_t &,int &)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(845,18):
          查看对正在编译的函数 模板 实例化“void std::_Construct_in_place<std::pair<int,int>,size_t&,int&>(_Ty &,size_t &,int &) noexcept”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
          D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility(506,61):
          查看对正在编译的函数 模板 实例化“std::pair<int,int>::pair<uint64_t&,int&,0>(_Other1,_Other2) noexcept”的引用
          with
          [
              _Other1=uint64_t &,
              _Other2=int &
          ]
  
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4267: “初始化”: 从“size_t”转换到“_Ty2”，可能丢失数据
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4267:         with
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4267:         [
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4267:             _Ty2=int
D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\utility(274,54): warning C4267:         ]
  (编译源文件“torch.cpp”)
  
    正在创建库 E:\code-learning\libtorch\Solution1\x64\Debug\torch.lib 和对象 E:\code-learning\libtorch\Solution1\x64\Debug\torch.exp
  torch.vcxproj -> E:\code-learning\libtorch\Solution1\x64\Debug\torch.exe
  'pwsh.exe' 不是内部或外部命令，也不是可运行的程序
  或批处理文件。
